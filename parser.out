Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENTBLOCK
    FUNCTION
    INTERFACE

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir_instr
Rule 5     instruccion -> declaracion
Rule 6     instruccion -> asignacion
Rule 7     instruccion -> sIf
Rule 8     sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
Rule 9     sIf2 -> LLAVDER ELSE sElse
Rule 10    sIf2 -> LLAVDER
Rule 11    sElse -> LLAVIZQ instrucciones LLAVDER
Rule 12    sElse -> sIf
Rule 13    asignacion -> ID IGUAL op_Ternario PUNTOCOMA
Rule 14    asignacion -> ID MAS IGUAL op_Ternario PUNTOCOMA
Rule 15    asignacion -> ID MENOS IGUAL op_Ternario PUNTOCOMA
Rule 16    declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita
Rule 17    declaracion -> tipoVar ID declaracion_implicita
Rule 18    declaracion_explicita -> PUNTOCOMA
Rule 19    declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA
Rule 20    declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA
Rule 21    tipoVar -> VAR
Rule 22    tipoVar -> CONST
Rule 23    tipo -> NUMBER
Rule 24    tipo -> FLOAT
Rule 25    tipo -> STRING
Rule 26    tipo -> BOOLEAN
Rule 27    tipo -> CHAR
Rule 28    imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
Rule 29    lista_exp -> lista_exp COMA op_Ternario
Rule 30    lista_exp -> op_Ternario
Rule 31    op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
Rule 32    op_Ternario -> exp_Or
Rule 33    exp_Or -> exp_Or OR exp_And
Rule 34    exp_Or -> exp_And
Rule 35    exp_And -> exp_And AND exp_Not
Rule 36    exp_And -> exp_Not
Rule 37    exp_Not -> lNot exp_Comp
Rule 38    exp_Not -> exp_Comp
Rule 39    lNot -> lNot NOT
Rule 40    lNot -> NOT
Rule 41    exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
Rule 42    exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos
Rule 43    exp_Comp -> exp_rel
Rule 44    exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos
Rule 45    exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos
Rule 46    exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
Rule 47    exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos
Rule 48    exp_rel -> exp_Sum_Menos
Rule 49    exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div
Rule 50    exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div
Rule 51    exp_Sum_Menos -> exp_Mul_Div
Rule 52    exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis
Rule 53    exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis
Rule 54    exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis
Rule 55    exp_Mul_Div -> exp_Parentesis
Rule 56    exp_Parentesis -> PARIZQ exp_Or PARDER
Rule 57    exp_Parentesis -> exp_Negativo
Rule 58    exp_Negativo -> MENOS valor
Rule 59    exp_Negativo -> valor
Rule 60    valor -> ENTERO
Rule 61    valor -> CADENA
Rule 62    valor -> DECIMAL
Rule 63    valor -> CARACTER
Rule 64    valor -> TRUE
Rule 65    valor -> FALSE
Rule 66    valor -> NULL
Rule 67    valor -> ID

Terminals, with rules where they appear

AND                  : 35
BOOLEAN              : 26
CADENA               : 61
CARACTER             : 63
CHAR                 : 27
COMA                 : 29
COMMENTBLOCK         : 
CONSOLE              : 28
CONST                : 22
DECIMAL              : 62
DISTINTO             : 42
DIVIDIDO             : 53
DOSPUNTOS            : 16 31
ELSE                 : 9
ENTERO               : 60
EQUIVALENTE          : 41
FALSE                : 65
FLOAT                : 24
FUNCTION             : 
ID                   : 13 14 15 16 17 67
IF                   : 8
IGUAL                : 13 14 15 19 20
INTERFACE            : 
INTERROGACION        : 31
LLAVDER              : 9 10 11
LLAVIZQ              : 8 11
LOG                  : 28
MAS                  : 14 49
MAYOR                : 44
MAYORIGUAL           : 46
MENOR                : 45
MENORIGUAL           : 47
MENOS                : 15 50 58
MODULO               : 54
NOT                  : 39 40
NULL                 : 66
NUMBER               : 23
OR                   : 33
PARDER               : 8 28 56
PARIZQ               : 8 28 56
POR                  : 52
PUNTO                : 28
PUNTOCOMA            : 13 14 15 18 19 20 28
STRING               : 25
TRUE                 : 64
VAR                  : 21
error                : 

Nonterminals, with rules where they appear

asignacion           : 6
declaracion          : 5
declaracion_explicita : 16
declaracion_implicita : 17
exp_And              : 33 34 35
exp_Comp             : 37 38
exp_Mul_Div          : 49 50 51 52 53 54
exp_Negativo         : 57
exp_Not              : 35 36
exp_Or               : 31 31 31 32 33 56
exp_Parentesis       : 52 53 54 55
exp_Sum_Menos        : 41 41 42 42 44 44 45 45 46 46 47 47 48 49 50
exp_rel              : 43
imprimir_instr       : 4
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 8 11
lNot                 : 37 39
lista_exp            : 28 29
op_Ternario          : 8 13 14 15 19 20 29 30
sElse                : 9
sIf                  : 7 12
sIf2                 : 8
tipo                 : 16
tipoVar              : 16 17
valor                : 58 59

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion
    (7) instruccion -> . sIf
    (28) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (16) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (17) declaracion -> . tipoVar ID declaracion_implicita
    (13) asignacion -> . ID IGUAL op_Ternario PUNTOCOMA
    (14) asignacion -> . ID MAS IGUAL op_Ternario PUNTOCOMA
    (15) asignacion -> . ID MENOS IGUAL op_Ternario PUNTOCOMA
    (8) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (21) tipoVar -> . VAR
    (22) tipoVar -> . CONST

    CONSOLE         shift and go to state 8
    ID              shift and go to state 10
    IF              shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    sIf                            shift and go to state 7
    tipoVar                        shift and go to state 9

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion
    (7) instruccion -> . sIf
    (28) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (16) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (17) declaracion -> . tipoVar ID declaracion_implicita
    (13) asignacion -> . ID IGUAL op_Ternario PUNTOCOMA
    (14) asignacion -> . ID MAS IGUAL op_Ternario PUNTOCOMA
    (15) asignacion -> . ID MENOS IGUAL op_Ternario PUNTOCOMA
    (8) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (21) tipoVar -> . VAR
    (22) tipoVar -> . CONST

    $end            reduce using rule 1 (init -> instrucciones .)
    CONSOLE         shift and go to state 8
    ID              shift and go to state 10
    IF              shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13

    instruccion                    shift and go to state 14
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    sIf                            shift and go to state 7
    tipoVar                        shift and go to state 9

state 3

    (3) instrucciones -> instruccion .

    CONSOLE         reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    VAR             reduce using rule 3 (instrucciones -> instruccion .)
    CONST           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVDER         reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir_instr .

    CONSOLE         reduce using rule 4 (instruccion -> imprimir_instr .)
    ID              reduce using rule 4 (instruccion -> imprimir_instr .)
    IF              reduce using rule 4 (instruccion -> imprimir_instr .)
    VAR             reduce using rule 4 (instruccion -> imprimir_instr .)
    CONST           reduce using rule 4 (instruccion -> imprimir_instr .)
    $end            reduce using rule 4 (instruccion -> imprimir_instr .)
    LLAVDER         reduce using rule 4 (instruccion -> imprimir_instr .)


state 5

    (5) instruccion -> declaracion .

    CONSOLE         reduce using rule 5 (instruccion -> declaracion .)
    ID              reduce using rule 5 (instruccion -> declaracion .)
    IF              reduce using rule 5 (instruccion -> declaracion .)
    VAR             reduce using rule 5 (instruccion -> declaracion .)
    CONST           reduce using rule 5 (instruccion -> declaracion .)
    $end            reduce using rule 5 (instruccion -> declaracion .)
    LLAVDER         reduce using rule 5 (instruccion -> declaracion .)


state 6

    (6) instruccion -> asignacion .

    CONSOLE         reduce using rule 6 (instruccion -> asignacion .)
    ID              reduce using rule 6 (instruccion -> asignacion .)
    IF              reduce using rule 6 (instruccion -> asignacion .)
    VAR             reduce using rule 6 (instruccion -> asignacion .)
    CONST           reduce using rule 6 (instruccion -> asignacion .)
    $end            reduce using rule 6 (instruccion -> asignacion .)
    LLAVDER         reduce using rule 6 (instruccion -> asignacion .)


state 7

    (7) instruccion -> sIf .

    CONSOLE         reduce using rule 7 (instruccion -> sIf .)
    ID              reduce using rule 7 (instruccion -> sIf .)
    IF              reduce using rule 7 (instruccion -> sIf .)
    VAR             reduce using rule 7 (instruccion -> sIf .)
    CONST           reduce using rule 7 (instruccion -> sIf .)
    $end            reduce using rule 7 (instruccion -> sIf .)
    LLAVDER         reduce using rule 7 (instruccion -> sIf .)


state 8

    (28) imprimir_instr -> CONSOLE . PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA

    PUNTO           shift and go to state 15


state 9

    (16) declaracion -> tipoVar . ID DOSPUNTOS tipo declaracion_explicita
    (17) declaracion -> tipoVar . ID declaracion_implicita

    ID              shift and go to state 16


state 10

    (13) asignacion -> ID . IGUAL op_Ternario PUNTOCOMA
    (14) asignacion -> ID . MAS IGUAL op_Ternario PUNTOCOMA
    (15) asignacion -> ID . MENOS IGUAL op_Ternario PUNTOCOMA

    IGUAL           shift and go to state 17
    MAS             shift and go to state 18
    MENOS           shift and go to state 19


state 11

    (8) sIf -> IF . PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2

    PARIZQ          shift and go to state 20


state 12

    (21) tipoVar -> VAR .

    ID              reduce using rule 21 (tipoVar -> VAR .)


state 13

    (22) tipoVar -> CONST .

    ID              reduce using rule 22 (tipoVar -> CONST .)


state 14

    (2) instrucciones -> instrucciones instruccion .

    CONSOLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VAR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONST           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVDER         reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 15

    (28) imprimir_instr -> CONSOLE PUNTO . LOG PARIZQ lista_exp PARDER PUNTOCOMA

    LOG             shift and go to state 21


state 16

    (16) declaracion -> tipoVar ID . DOSPUNTOS tipo declaracion_explicita
    (17) declaracion -> tipoVar ID . declaracion_implicita
    (20) declaracion_implicita -> . IGUAL op_Ternario PUNTOCOMA

    DOSPUNTOS       shift and go to state 22
    IGUAL           shift and go to state 24

    declaracion_implicita          shift and go to state 23

state 17

    (13) asignacion -> ID IGUAL . op_Ternario PUNTOCOMA
    (31) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (32) op_Ternario -> . exp_Or
    (33) exp_Or -> . exp_Or OR exp_And
    (34) exp_Or -> . exp_And
    (35) exp_And -> . exp_And AND exp_Not
    (36) exp_And -> . exp_Not
    (37) exp_Not -> . lNot exp_Comp
    (38) exp_Not -> . exp_Comp
    (39) lNot -> . lNot NOT
    (40) lNot -> . NOT
    (41) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (43) exp_Comp -> . exp_rel
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (44) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (45) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (46) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> . exp_Sum_Menos
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    NOT             shift and go to state 32
    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    op_Ternario                    shift and go to state 26
    exp_Or                         shift and go to state 27
    exp_And                        shift and go to state 28
    exp_Not                        shift and go to state 29
    lNot                           shift and go to state 30
    exp_Comp                       shift and go to state 31
    exp_Sum_Menos                  shift and go to state 33
    exp_rel                        shift and go to state 34
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 18

    (14) asignacion -> ID MAS . IGUAL op_Ternario PUNTOCOMA

    IGUAL           shift and go to state 48


state 19

    (15) asignacion -> ID MENOS . IGUAL op_Ternario PUNTOCOMA

    IGUAL           shift and go to state 49


state 20

    (8) sIf -> IF PARIZQ . op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (31) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (32) op_Ternario -> . exp_Or
    (33) exp_Or -> . exp_Or OR exp_And
    (34) exp_Or -> . exp_And
    (35) exp_And -> . exp_And AND exp_Not
    (36) exp_And -> . exp_Not
    (37) exp_Not -> . lNot exp_Comp
    (38) exp_Not -> . exp_Comp
    (39) lNot -> . lNot NOT
    (40) lNot -> . NOT
    (41) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (43) exp_Comp -> . exp_rel
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (44) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (45) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (46) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> . exp_Sum_Menos
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    NOT             shift and go to state 32
    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    op_Ternario                    shift and go to state 50
    exp_Or                         shift and go to state 27
    exp_And                        shift and go to state 28
    exp_Not                        shift and go to state 29
    lNot                           shift and go to state 30
    exp_Comp                       shift and go to state 31
    exp_Sum_Menos                  shift and go to state 33
    exp_rel                        shift and go to state 34
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 21

    (28) imprimir_instr -> CONSOLE PUNTO LOG . PARIZQ lista_exp PARDER PUNTOCOMA

    PARIZQ          shift and go to state 51


state 22

    (16) declaracion -> tipoVar ID DOSPUNTOS . tipo declaracion_explicita
    (23) tipo -> . NUMBER
    (24) tipo -> . FLOAT
    (25) tipo -> . STRING
    (26) tipo -> . BOOLEAN
    (27) tipo -> . CHAR

    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    STRING          shift and go to state 55
    BOOLEAN         shift and go to state 56
    CHAR            shift and go to state 57

    tipo                           shift and go to state 52

state 23

    (17) declaracion -> tipoVar ID declaracion_implicita .

    CONSOLE         reduce using rule 17 (declaracion -> tipoVar ID declaracion_implicita .)
    ID              reduce using rule 17 (declaracion -> tipoVar ID declaracion_implicita .)
    IF              reduce using rule 17 (declaracion -> tipoVar ID declaracion_implicita .)
    VAR             reduce using rule 17 (declaracion -> tipoVar ID declaracion_implicita .)
    CONST           reduce using rule 17 (declaracion -> tipoVar ID declaracion_implicita .)
    $end            reduce using rule 17 (declaracion -> tipoVar ID declaracion_implicita .)
    LLAVDER         reduce using rule 17 (declaracion -> tipoVar ID declaracion_implicita .)


state 24

    (20) declaracion_implicita -> IGUAL . op_Ternario PUNTOCOMA
    (31) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (32) op_Ternario -> . exp_Or
    (33) exp_Or -> . exp_Or OR exp_And
    (34) exp_Or -> . exp_And
    (35) exp_And -> . exp_And AND exp_Not
    (36) exp_And -> . exp_Not
    (37) exp_Not -> . lNot exp_Comp
    (38) exp_Not -> . exp_Comp
    (39) lNot -> . lNot NOT
    (40) lNot -> . NOT
    (41) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (43) exp_Comp -> . exp_rel
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (44) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (45) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (46) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> . exp_Sum_Menos
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    NOT             shift and go to state 32
    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    op_Ternario                    shift and go to state 58
    exp_Or                         shift and go to state 27
    exp_And                        shift and go to state 28
    exp_Not                        shift and go to state 29
    lNot                           shift and go to state 30
    exp_Comp                       shift and go to state 31
    exp_Sum_Menos                  shift and go to state 33
    exp_rel                        shift and go to state 34
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 25

    (67) valor -> ID .

    POR             reduce using rule 67 (valor -> ID .)
    DIVIDIDO        reduce using rule 67 (valor -> ID .)
    MODULO          reduce using rule 67 (valor -> ID .)
    EQUIVALENTE     reduce using rule 67 (valor -> ID .)
    DISTINTO        reduce using rule 67 (valor -> ID .)
    MAS             reduce using rule 67 (valor -> ID .)
    MENOS           reduce using rule 67 (valor -> ID .)
    MAYOR           reduce using rule 67 (valor -> ID .)
    MENOR           reduce using rule 67 (valor -> ID .)
    MAYORIGUAL      reduce using rule 67 (valor -> ID .)
    MENORIGUAL      reduce using rule 67 (valor -> ID .)
    AND             reduce using rule 67 (valor -> ID .)
    INTERROGACION   reduce using rule 67 (valor -> ID .)
    OR              reduce using rule 67 (valor -> ID .)
    PUNTOCOMA       reduce using rule 67 (valor -> ID .)
    PARDER          reduce using rule 67 (valor -> ID .)
    COMA            reduce using rule 67 (valor -> ID .)
    DOSPUNTOS       reduce using rule 67 (valor -> ID .)


state 26

    (13) asignacion -> ID IGUAL op_Ternario . PUNTOCOMA

    PUNTOCOMA       shift and go to state 59


state 27

    (31) op_Ternario -> exp_Or . INTERROGACION exp_Or DOSPUNTOS exp_Or
    (32) op_Ternario -> exp_Or .
    (33) exp_Or -> exp_Or . OR exp_And

    INTERROGACION   shift and go to state 60
    PUNTOCOMA       reduce using rule 32 (op_Ternario -> exp_Or .)
    PARDER          reduce using rule 32 (op_Ternario -> exp_Or .)
    COMA            reduce using rule 32 (op_Ternario -> exp_Or .)
    OR              shift and go to state 61


state 28

    (34) exp_Or -> exp_And .
    (35) exp_And -> exp_And . AND exp_Not

    INTERROGACION   reduce using rule 34 (exp_Or -> exp_And .)
    OR              reduce using rule 34 (exp_Or -> exp_And .)
    PUNTOCOMA       reduce using rule 34 (exp_Or -> exp_And .)
    PARDER          reduce using rule 34 (exp_Or -> exp_And .)
    COMA            reduce using rule 34 (exp_Or -> exp_And .)
    DOSPUNTOS       reduce using rule 34 (exp_Or -> exp_And .)
    AND             shift and go to state 62


state 29

    (36) exp_And -> exp_Not .

    AND             reduce using rule 36 (exp_And -> exp_Not .)
    INTERROGACION   reduce using rule 36 (exp_And -> exp_Not .)
    OR              reduce using rule 36 (exp_And -> exp_Not .)
    PUNTOCOMA       reduce using rule 36 (exp_And -> exp_Not .)
    PARDER          reduce using rule 36 (exp_And -> exp_Not .)
    COMA            reduce using rule 36 (exp_And -> exp_Not .)
    DOSPUNTOS       reduce using rule 36 (exp_And -> exp_Not .)


state 30

    (37) exp_Not -> lNot . exp_Comp
    (39) lNot -> lNot . NOT
    (41) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (43) exp_Comp -> . exp_rel
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (44) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (45) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (46) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> . exp_Sum_Menos
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    NOT             shift and go to state 64
    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Comp                       shift and go to state 63
    exp_Sum_Menos                  shift and go to state 33
    exp_rel                        shift and go to state 34
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 31

    (38) exp_Not -> exp_Comp .

    AND             reduce using rule 38 (exp_Not -> exp_Comp .)
    INTERROGACION   reduce using rule 38 (exp_Not -> exp_Comp .)
    OR              reduce using rule 38 (exp_Not -> exp_Comp .)
    PUNTOCOMA       reduce using rule 38 (exp_Not -> exp_Comp .)
    PARDER          reduce using rule 38 (exp_Not -> exp_Comp .)
    COMA            reduce using rule 38 (exp_Not -> exp_Comp .)
    DOSPUNTOS       reduce using rule 38 (exp_Not -> exp_Comp .)


state 32

    (40) lNot -> NOT .

    NOT             reduce using rule 40 (lNot -> NOT .)
    PARIZQ          reduce using rule 40 (lNot -> NOT .)
    MENOS           reduce using rule 40 (lNot -> NOT .)
    ENTERO          reduce using rule 40 (lNot -> NOT .)
    CADENA          reduce using rule 40 (lNot -> NOT .)
    DECIMAL         reduce using rule 40 (lNot -> NOT .)
    CARACTER        reduce using rule 40 (lNot -> NOT .)
    TRUE            reduce using rule 40 (lNot -> NOT .)
    FALSE           reduce using rule 40 (lNot -> NOT .)
    NULL            reduce using rule 40 (lNot -> NOT .)
    ID              reduce using rule 40 (lNot -> NOT .)


state 33

    (41) exp_Comp -> exp_Sum_Menos . EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> exp_Sum_Menos . DISTINTO exp_Sum_Menos
    (49) exp_Sum_Menos -> exp_Sum_Menos . MAS exp_Mul_Div
    (50) exp_Sum_Menos -> exp_Sum_Menos . MENOS exp_Mul_Div
    (44) exp_rel -> exp_Sum_Menos . MAYOR exp_Sum_Menos
    (45) exp_rel -> exp_Sum_Menos . MENOR exp_Sum_Menos
    (46) exp_rel -> exp_Sum_Menos . MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> exp_Sum_Menos . MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> exp_Sum_Menos .

    EQUIVALENTE     shift and go to state 65
    DISTINTO        shift and go to state 66
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    AND             reduce using rule 48 (exp_rel -> exp_Sum_Menos .)
    INTERROGACION   reduce using rule 48 (exp_rel -> exp_Sum_Menos .)
    OR              reduce using rule 48 (exp_rel -> exp_Sum_Menos .)
    PUNTOCOMA       reduce using rule 48 (exp_rel -> exp_Sum_Menos .)
    PARDER          reduce using rule 48 (exp_rel -> exp_Sum_Menos .)
    COMA            reduce using rule 48 (exp_rel -> exp_Sum_Menos .)
    DOSPUNTOS       reduce using rule 48 (exp_rel -> exp_Sum_Menos .)


state 34

    (43) exp_Comp -> exp_rel .

    AND             reduce using rule 43 (exp_Comp -> exp_rel .)
    INTERROGACION   reduce using rule 43 (exp_Comp -> exp_rel .)
    OR              reduce using rule 43 (exp_Comp -> exp_rel .)
    PUNTOCOMA       reduce using rule 43 (exp_Comp -> exp_rel .)
    PARDER          reduce using rule 43 (exp_Comp -> exp_rel .)
    COMA            reduce using rule 43 (exp_Comp -> exp_rel .)
    DOSPUNTOS       reduce using rule 43 (exp_Comp -> exp_rel .)


state 35

    (51) exp_Sum_Menos -> exp_Mul_Div .
    (52) exp_Mul_Div -> exp_Mul_Div . POR exp_Parentesis
    (53) exp_Mul_Div -> exp_Mul_Div . DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> exp_Mul_Div . MODULO exp_Parentesis

    EQUIVALENTE     reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    DISTINTO        reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    MAS             reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    MENOS           reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    MAYOR           reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    MENOR           reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    MAYORIGUAL      reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    MENORIGUAL      reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    AND             reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    INTERROGACION   reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    OR              reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    PUNTOCOMA       reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    PARDER          reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    COMA            reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    DOSPUNTOS       reduce using rule 51 (exp_Sum_Menos -> exp_Mul_Div .)
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    MODULO          shift and go to state 75


state 36

    (58) exp_Negativo -> MENOS . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    valor                          shift and go to state 76

state 37

    (55) exp_Mul_Div -> exp_Parentesis .

    POR             reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    DIVIDIDO        reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    MODULO          reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    EQUIVALENTE     reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    DISTINTO        reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    MAS             reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    MENOS           reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    MAYOR           reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    MENOR           reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    MAYORIGUAL      reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    MENORIGUAL      reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    AND             reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    INTERROGACION   reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    OR              reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    PUNTOCOMA       reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    PARDER          reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    COMA            reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)
    DOSPUNTOS       reduce using rule 55 (exp_Mul_Div -> exp_Parentesis .)


state 38

    (56) exp_Parentesis -> PARIZQ . exp_Or PARDER
    (33) exp_Or -> . exp_Or OR exp_And
    (34) exp_Or -> . exp_And
    (35) exp_And -> . exp_And AND exp_Not
    (36) exp_And -> . exp_Not
    (37) exp_Not -> . lNot exp_Comp
    (38) exp_Not -> . exp_Comp
    (39) lNot -> . lNot NOT
    (40) lNot -> . NOT
    (41) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (43) exp_Comp -> . exp_rel
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (44) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (45) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (46) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> . exp_Sum_Menos
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    NOT             shift and go to state 32
    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Or                         shift and go to state 77
    exp_And                        shift and go to state 28
    exp_Not                        shift and go to state 29
    lNot                           shift and go to state 30
    exp_Comp                       shift and go to state 31
    exp_Sum_Menos                  shift and go to state 33
    exp_rel                        shift and go to state 34
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 39

    (57) exp_Parentesis -> exp_Negativo .

    POR             reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    DIVIDIDO        reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    MODULO          reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    EQUIVALENTE     reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    DISTINTO        reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    MAS             reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    MENOS           reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    MAYOR           reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    MENOR           reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    MAYORIGUAL      reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    MENORIGUAL      reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    AND             reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    INTERROGACION   reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    OR              reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    PUNTOCOMA       reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    PARDER          reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    COMA            reduce using rule 57 (exp_Parentesis -> exp_Negativo .)
    DOSPUNTOS       reduce using rule 57 (exp_Parentesis -> exp_Negativo .)


state 40

    (59) exp_Negativo -> valor .

    POR             reduce using rule 59 (exp_Negativo -> valor .)
    DIVIDIDO        reduce using rule 59 (exp_Negativo -> valor .)
    MODULO          reduce using rule 59 (exp_Negativo -> valor .)
    EQUIVALENTE     reduce using rule 59 (exp_Negativo -> valor .)
    DISTINTO        reduce using rule 59 (exp_Negativo -> valor .)
    MAS             reduce using rule 59 (exp_Negativo -> valor .)
    MENOS           reduce using rule 59 (exp_Negativo -> valor .)
    MAYOR           reduce using rule 59 (exp_Negativo -> valor .)
    MENOR           reduce using rule 59 (exp_Negativo -> valor .)
    MAYORIGUAL      reduce using rule 59 (exp_Negativo -> valor .)
    MENORIGUAL      reduce using rule 59 (exp_Negativo -> valor .)
    AND             reduce using rule 59 (exp_Negativo -> valor .)
    INTERROGACION   reduce using rule 59 (exp_Negativo -> valor .)
    OR              reduce using rule 59 (exp_Negativo -> valor .)
    PUNTOCOMA       reduce using rule 59 (exp_Negativo -> valor .)
    PARDER          reduce using rule 59 (exp_Negativo -> valor .)
    COMA            reduce using rule 59 (exp_Negativo -> valor .)
    DOSPUNTOS       reduce using rule 59 (exp_Negativo -> valor .)


state 41

    (60) valor -> ENTERO .

    POR             reduce using rule 60 (valor -> ENTERO .)
    DIVIDIDO        reduce using rule 60 (valor -> ENTERO .)
    MODULO          reduce using rule 60 (valor -> ENTERO .)
    EQUIVALENTE     reduce using rule 60 (valor -> ENTERO .)
    DISTINTO        reduce using rule 60 (valor -> ENTERO .)
    MAS             reduce using rule 60 (valor -> ENTERO .)
    MENOS           reduce using rule 60 (valor -> ENTERO .)
    MAYOR           reduce using rule 60 (valor -> ENTERO .)
    MENOR           reduce using rule 60 (valor -> ENTERO .)
    MAYORIGUAL      reduce using rule 60 (valor -> ENTERO .)
    MENORIGUAL      reduce using rule 60 (valor -> ENTERO .)
    AND             reduce using rule 60 (valor -> ENTERO .)
    INTERROGACION   reduce using rule 60 (valor -> ENTERO .)
    OR              reduce using rule 60 (valor -> ENTERO .)
    PUNTOCOMA       reduce using rule 60 (valor -> ENTERO .)
    PARDER          reduce using rule 60 (valor -> ENTERO .)
    COMA            reduce using rule 60 (valor -> ENTERO .)
    DOSPUNTOS       reduce using rule 60 (valor -> ENTERO .)


state 42

    (61) valor -> CADENA .

    POR             reduce using rule 61 (valor -> CADENA .)
    DIVIDIDO        reduce using rule 61 (valor -> CADENA .)
    MODULO          reduce using rule 61 (valor -> CADENA .)
    EQUIVALENTE     reduce using rule 61 (valor -> CADENA .)
    DISTINTO        reduce using rule 61 (valor -> CADENA .)
    MAS             reduce using rule 61 (valor -> CADENA .)
    MENOS           reduce using rule 61 (valor -> CADENA .)
    MAYOR           reduce using rule 61 (valor -> CADENA .)
    MENOR           reduce using rule 61 (valor -> CADENA .)
    MAYORIGUAL      reduce using rule 61 (valor -> CADENA .)
    MENORIGUAL      reduce using rule 61 (valor -> CADENA .)
    AND             reduce using rule 61 (valor -> CADENA .)
    INTERROGACION   reduce using rule 61 (valor -> CADENA .)
    OR              reduce using rule 61 (valor -> CADENA .)
    PUNTOCOMA       reduce using rule 61 (valor -> CADENA .)
    PARDER          reduce using rule 61 (valor -> CADENA .)
    COMA            reduce using rule 61 (valor -> CADENA .)
    DOSPUNTOS       reduce using rule 61 (valor -> CADENA .)


state 43

    (62) valor -> DECIMAL .

    POR             reduce using rule 62 (valor -> DECIMAL .)
    DIVIDIDO        reduce using rule 62 (valor -> DECIMAL .)
    MODULO          reduce using rule 62 (valor -> DECIMAL .)
    EQUIVALENTE     reduce using rule 62 (valor -> DECIMAL .)
    DISTINTO        reduce using rule 62 (valor -> DECIMAL .)
    MAS             reduce using rule 62 (valor -> DECIMAL .)
    MENOS           reduce using rule 62 (valor -> DECIMAL .)
    MAYOR           reduce using rule 62 (valor -> DECIMAL .)
    MENOR           reduce using rule 62 (valor -> DECIMAL .)
    MAYORIGUAL      reduce using rule 62 (valor -> DECIMAL .)
    MENORIGUAL      reduce using rule 62 (valor -> DECIMAL .)
    AND             reduce using rule 62 (valor -> DECIMAL .)
    INTERROGACION   reduce using rule 62 (valor -> DECIMAL .)
    OR              reduce using rule 62 (valor -> DECIMAL .)
    PUNTOCOMA       reduce using rule 62 (valor -> DECIMAL .)
    PARDER          reduce using rule 62 (valor -> DECIMAL .)
    COMA            reduce using rule 62 (valor -> DECIMAL .)
    DOSPUNTOS       reduce using rule 62 (valor -> DECIMAL .)


state 44

    (63) valor -> CARACTER .

    POR             reduce using rule 63 (valor -> CARACTER .)
    DIVIDIDO        reduce using rule 63 (valor -> CARACTER .)
    MODULO          reduce using rule 63 (valor -> CARACTER .)
    EQUIVALENTE     reduce using rule 63 (valor -> CARACTER .)
    DISTINTO        reduce using rule 63 (valor -> CARACTER .)
    MAS             reduce using rule 63 (valor -> CARACTER .)
    MENOS           reduce using rule 63 (valor -> CARACTER .)
    MAYOR           reduce using rule 63 (valor -> CARACTER .)
    MENOR           reduce using rule 63 (valor -> CARACTER .)
    MAYORIGUAL      reduce using rule 63 (valor -> CARACTER .)
    MENORIGUAL      reduce using rule 63 (valor -> CARACTER .)
    AND             reduce using rule 63 (valor -> CARACTER .)
    INTERROGACION   reduce using rule 63 (valor -> CARACTER .)
    OR              reduce using rule 63 (valor -> CARACTER .)
    PUNTOCOMA       reduce using rule 63 (valor -> CARACTER .)
    PARDER          reduce using rule 63 (valor -> CARACTER .)
    COMA            reduce using rule 63 (valor -> CARACTER .)
    DOSPUNTOS       reduce using rule 63 (valor -> CARACTER .)


state 45

    (64) valor -> TRUE .

    POR             reduce using rule 64 (valor -> TRUE .)
    DIVIDIDO        reduce using rule 64 (valor -> TRUE .)
    MODULO          reduce using rule 64 (valor -> TRUE .)
    EQUIVALENTE     reduce using rule 64 (valor -> TRUE .)
    DISTINTO        reduce using rule 64 (valor -> TRUE .)
    MAS             reduce using rule 64 (valor -> TRUE .)
    MENOS           reduce using rule 64 (valor -> TRUE .)
    MAYOR           reduce using rule 64 (valor -> TRUE .)
    MENOR           reduce using rule 64 (valor -> TRUE .)
    MAYORIGUAL      reduce using rule 64 (valor -> TRUE .)
    MENORIGUAL      reduce using rule 64 (valor -> TRUE .)
    AND             reduce using rule 64 (valor -> TRUE .)
    INTERROGACION   reduce using rule 64 (valor -> TRUE .)
    OR              reduce using rule 64 (valor -> TRUE .)
    PUNTOCOMA       reduce using rule 64 (valor -> TRUE .)
    PARDER          reduce using rule 64 (valor -> TRUE .)
    COMA            reduce using rule 64 (valor -> TRUE .)
    DOSPUNTOS       reduce using rule 64 (valor -> TRUE .)


state 46

    (65) valor -> FALSE .

    POR             reduce using rule 65 (valor -> FALSE .)
    DIVIDIDO        reduce using rule 65 (valor -> FALSE .)
    MODULO          reduce using rule 65 (valor -> FALSE .)
    EQUIVALENTE     reduce using rule 65 (valor -> FALSE .)
    DISTINTO        reduce using rule 65 (valor -> FALSE .)
    MAS             reduce using rule 65 (valor -> FALSE .)
    MENOS           reduce using rule 65 (valor -> FALSE .)
    MAYOR           reduce using rule 65 (valor -> FALSE .)
    MENOR           reduce using rule 65 (valor -> FALSE .)
    MAYORIGUAL      reduce using rule 65 (valor -> FALSE .)
    MENORIGUAL      reduce using rule 65 (valor -> FALSE .)
    AND             reduce using rule 65 (valor -> FALSE .)
    INTERROGACION   reduce using rule 65 (valor -> FALSE .)
    OR              reduce using rule 65 (valor -> FALSE .)
    PUNTOCOMA       reduce using rule 65 (valor -> FALSE .)
    PARDER          reduce using rule 65 (valor -> FALSE .)
    COMA            reduce using rule 65 (valor -> FALSE .)
    DOSPUNTOS       reduce using rule 65 (valor -> FALSE .)


state 47

    (66) valor -> NULL .

    POR             reduce using rule 66 (valor -> NULL .)
    DIVIDIDO        reduce using rule 66 (valor -> NULL .)
    MODULO          reduce using rule 66 (valor -> NULL .)
    EQUIVALENTE     reduce using rule 66 (valor -> NULL .)
    DISTINTO        reduce using rule 66 (valor -> NULL .)
    MAS             reduce using rule 66 (valor -> NULL .)
    MENOS           reduce using rule 66 (valor -> NULL .)
    MAYOR           reduce using rule 66 (valor -> NULL .)
    MENOR           reduce using rule 66 (valor -> NULL .)
    MAYORIGUAL      reduce using rule 66 (valor -> NULL .)
    MENORIGUAL      reduce using rule 66 (valor -> NULL .)
    AND             reduce using rule 66 (valor -> NULL .)
    INTERROGACION   reduce using rule 66 (valor -> NULL .)
    OR              reduce using rule 66 (valor -> NULL .)
    PUNTOCOMA       reduce using rule 66 (valor -> NULL .)
    PARDER          reduce using rule 66 (valor -> NULL .)
    COMA            reduce using rule 66 (valor -> NULL .)
    DOSPUNTOS       reduce using rule 66 (valor -> NULL .)


state 48

    (14) asignacion -> ID MAS IGUAL . op_Ternario PUNTOCOMA
    (31) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (32) op_Ternario -> . exp_Or
    (33) exp_Or -> . exp_Or OR exp_And
    (34) exp_Or -> . exp_And
    (35) exp_And -> . exp_And AND exp_Not
    (36) exp_And -> . exp_Not
    (37) exp_Not -> . lNot exp_Comp
    (38) exp_Not -> . exp_Comp
    (39) lNot -> . lNot NOT
    (40) lNot -> . NOT
    (41) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (43) exp_Comp -> . exp_rel
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (44) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (45) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (46) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> . exp_Sum_Menos
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    NOT             shift and go to state 32
    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    op_Ternario                    shift and go to state 78
    exp_Or                         shift and go to state 27
    exp_And                        shift and go to state 28
    exp_Not                        shift and go to state 29
    lNot                           shift and go to state 30
    exp_Comp                       shift and go to state 31
    exp_Sum_Menos                  shift and go to state 33
    exp_rel                        shift and go to state 34
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 49

    (15) asignacion -> ID MENOS IGUAL . op_Ternario PUNTOCOMA
    (31) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (32) op_Ternario -> . exp_Or
    (33) exp_Or -> . exp_Or OR exp_And
    (34) exp_Or -> . exp_And
    (35) exp_And -> . exp_And AND exp_Not
    (36) exp_And -> . exp_Not
    (37) exp_Not -> . lNot exp_Comp
    (38) exp_Not -> . exp_Comp
    (39) lNot -> . lNot NOT
    (40) lNot -> . NOT
    (41) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (43) exp_Comp -> . exp_rel
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (44) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (45) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (46) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> . exp_Sum_Menos
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    NOT             shift and go to state 32
    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    op_Ternario                    shift and go to state 79
    exp_Or                         shift and go to state 27
    exp_And                        shift and go to state 28
    exp_Not                        shift and go to state 29
    lNot                           shift and go to state 30
    exp_Comp                       shift and go to state 31
    exp_Sum_Menos                  shift and go to state 33
    exp_rel                        shift and go to state 34
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 50

    (8) sIf -> IF PARIZQ op_Ternario . PARDER LLAVIZQ instrucciones sIf2

    PARDER          shift and go to state 80


state 51

    (28) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ . lista_exp PARDER PUNTOCOMA
    (29) lista_exp -> . lista_exp COMA op_Ternario
    (30) lista_exp -> . op_Ternario
    (31) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (32) op_Ternario -> . exp_Or
    (33) exp_Or -> . exp_Or OR exp_And
    (34) exp_Or -> . exp_And
    (35) exp_And -> . exp_And AND exp_Not
    (36) exp_And -> . exp_Not
    (37) exp_Not -> . lNot exp_Comp
    (38) exp_Not -> . exp_Comp
    (39) lNot -> . lNot NOT
    (40) lNot -> . NOT
    (41) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (43) exp_Comp -> . exp_rel
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (44) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (45) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (46) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> . exp_Sum_Menos
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    NOT             shift and go to state 32
    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    lista_exp                      shift and go to state 81
    op_Ternario                    shift and go to state 82
    exp_Or                         shift and go to state 27
    exp_And                        shift and go to state 28
    exp_Not                        shift and go to state 29
    lNot                           shift and go to state 30
    exp_Comp                       shift and go to state 31
    exp_Sum_Menos                  shift and go to state 33
    exp_rel                        shift and go to state 34
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 52

    (16) declaracion -> tipoVar ID DOSPUNTOS tipo . declaracion_explicita
    (18) declaracion_explicita -> . PUNTOCOMA
    (19) declaracion_explicita -> . IGUAL op_Ternario PUNTOCOMA

    PUNTOCOMA       shift and go to state 84
    IGUAL           shift and go to state 85

    declaracion_explicita          shift and go to state 83

state 53

    (23) tipo -> NUMBER .

    PUNTOCOMA       reduce using rule 23 (tipo -> NUMBER .)
    IGUAL           reduce using rule 23 (tipo -> NUMBER .)


state 54

    (24) tipo -> FLOAT .

    PUNTOCOMA       reduce using rule 24 (tipo -> FLOAT .)
    IGUAL           reduce using rule 24 (tipo -> FLOAT .)


state 55

    (25) tipo -> STRING .

    PUNTOCOMA       reduce using rule 25 (tipo -> STRING .)
    IGUAL           reduce using rule 25 (tipo -> STRING .)


state 56

    (26) tipo -> BOOLEAN .

    PUNTOCOMA       reduce using rule 26 (tipo -> BOOLEAN .)
    IGUAL           reduce using rule 26 (tipo -> BOOLEAN .)


state 57

    (27) tipo -> CHAR .

    PUNTOCOMA       reduce using rule 27 (tipo -> CHAR .)
    IGUAL           reduce using rule 27 (tipo -> CHAR .)


state 58

    (20) declaracion_implicita -> IGUAL op_Ternario . PUNTOCOMA

    PUNTOCOMA       shift and go to state 86


state 59

    (13) asignacion -> ID IGUAL op_Ternario PUNTOCOMA .

    CONSOLE         reduce using rule 13 (asignacion -> ID IGUAL op_Ternario PUNTOCOMA .)
    ID              reduce using rule 13 (asignacion -> ID IGUAL op_Ternario PUNTOCOMA .)
    IF              reduce using rule 13 (asignacion -> ID IGUAL op_Ternario PUNTOCOMA .)
    VAR             reduce using rule 13 (asignacion -> ID IGUAL op_Ternario PUNTOCOMA .)
    CONST           reduce using rule 13 (asignacion -> ID IGUAL op_Ternario PUNTOCOMA .)
    $end            reduce using rule 13 (asignacion -> ID IGUAL op_Ternario PUNTOCOMA .)
    LLAVDER         reduce using rule 13 (asignacion -> ID IGUAL op_Ternario PUNTOCOMA .)


state 60

    (31) op_Ternario -> exp_Or INTERROGACION . exp_Or DOSPUNTOS exp_Or
    (33) exp_Or -> . exp_Or OR exp_And
    (34) exp_Or -> . exp_And
    (35) exp_And -> . exp_And AND exp_Not
    (36) exp_And -> . exp_Not
    (37) exp_Not -> . lNot exp_Comp
    (38) exp_Not -> . exp_Comp
    (39) lNot -> . lNot NOT
    (40) lNot -> . NOT
    (41) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (43) exp_Comp -> . exp_rel
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (44) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (45) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (46) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> . exp_Sum_Menos
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    NOT             shift and go to state 32
    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Or                         shift and go to state 87
    exp_And                        shift and go to state 28
    exp_Not                        shift and go to state 29
    lNot                           shift and go to state 30
    exp_Comp                       shift and go to state 31
    exp_Sum_Menos                  shift and go to state 33
    exp_rel                        shift and go to state 34
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 61

    (33) exp_Or -> exp_Or OR . exp_And
    (35) exp_And -> . exp_And AND exp_Not
    (36) exp_And -> . exp_Not
    (37) exp_Not -> . lNot exp_Comp
    (38) exp_Not -> . exp_Comp
    (39) lNot -> . lNot NOT
    (40) lNot -> . NOT
    (41) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (43) exp_Comp -> . exp_rel
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (44) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (45) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (46) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> . exp_Sum_Menos
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    NOT             shift and go to state 32
    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_And                        shift and go to state 88
    exp_Not                        shift and go to state 29
    lNot                           shift and go to state 30
    exp_Comp                       shift and go to state 31
    exp_Sum_Menos                  shift and go to state 33
    exp_rel                        shift and go to state 34
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 62

    (35) exp_And -> exp_And AND . exp_Not
    (37) exp_Not -> . lNot exp_Comp
    (38) exp_Not -> . exp_Comp
    (39) lNot -> . lNot NOT
    (40) lNot -> . NOT
    (41) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (43) exp_Comp -> . exp_rel
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (44) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (45) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (46) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> . exp_Sum_Menos
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    NOT             shift and go to state 32
    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Not                        shift and go to state 89
    lNot                           shift and go to state 30
    exp_Comp                       shift and go to state 31
    exp_Sum_Menos                  shift and go to state 33
    exp_rel                        shift and go to state 34
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 63

    (37) exp_Not -> lNot exp_Comp .

    AND             reduce using rule 37 (exp_Not -> lNot exp_Comp .)
    INTERROGACION   reduce using rule 37 (exp_Not -> lNot exp_Comp .)
    OR              reduce using rule 37 (exp_Not -> lNot exp_Comp .)
    PUNTOCOMA       reduce using rule 37 (exp_Not -> lNot exp_Comp .)
    PARDER          reduce using rule 37 (exp_Not -> lNot exp_Comp .)
    COMA            reduce using rule 37 (exp_Not -> lNot exp_Comp .)
    DOSPUNTOS       reduce using rule 37 (exp_Not -> lNot exp_Comp .)


state 64

    (39) lNot -> lNot NOT .

    NOT             reduce using rule 39 (lNot -> lNot NOT .)
    PARIZQ          reduce using rule 39 (lNot -> lNot NOT .)
    MENOS           reduce using rule 39 (lNot -> lNot NOT .)
    ENTERO          reduce using rule 39 (lNot -> lNot NOT .)
    CADENA          reduce using rule 39 (lNot -> lNot NOT .)
    DECIMAL         reduce using rule 39 (lNot -> lNot NOT .)
    CARACTER        reduce using rule 39 (lNot -> lNot NOT .)
    TRUE            reduce using rule 39 (lNot -> lNot NOT .)
    FALSE           reduce using rule 39 (lNot -> lNot NOT .)
    NULL            reduce using rule 39 (lNot -> lNot NOT .)
    ID              reduce using rule 39 (lNot -> lNot NOT .)


state 65

    (41) exp_Comp -> exp_Sum_Menos EQUIVALENTE . exp_Sum_Menos
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Sum_Menos                  shift and go to state 90
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 66

    (42) exp_Comp -> exp_Sum_Menos DISTINTO . exp_Sum_Menos
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Sum_Menos                  shift and go to state 91
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 67

    (49) exp_Sum_Menos -> exp_Sum_Menos MAS . exp_Mul_Div
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Mul_Div                    shift and go to state 92
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 68

    (50) exp_Sum_Menos -> exp_Sum_Menos MENOS . exp_Mul_Div
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Mul_Div                    shift and go to state 93
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 69

    (44) exp_rel -> exp_Sum_Menos MAYOR . exp_Sum_Menos
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Sum_Menos                  shift and go to state 94
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 70

    (45) exp_rel -> exp_Sum_Menos MENOR . exp_Sum_Menos
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Sum_Menos                  shift and go to state 95
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 71

    (46) exp_rel -> exp_Sum_Menos MAYORIGUAL . exp_Sum_Menos
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Sum_Menos                  shift and go to state 96
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 72

    (47) exp_rel -> exp_Sum_Menos MENORIGUAL . exp_Sum_Menos
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Sum_Menos                  shift and go to state 97
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 73

    (52) exp_Mul_Div -> exp_Mul_Div POR . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Parentesis                 shift and go to state 98
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 74

    (53) exp_Mul_Div -> exp_Mul_Div DIVIDIDO . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Parentesis                 shift and go to state 99
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 75

    (54) exp_Mul_Div -> exp_Mul_Div MODULO . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Parentesis                 shift and go to state 100
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 76

    (58) exp_Negativo -> MENOS valor .

    POR             reduce using rule 58 (exp_Negativo -> MENOS valor .)
    DIVIDIDO        reduce using rule 58 (exp_Negativo -> MENOS valor .)
    MODULO          reduce using rule 58 (exp_Negativo -> MENOS valor .)
    EQUIVALENTE     reduce using rule 58 (exp_Negativo -> MENOS valor .)
    DISTINTO        reduce using rule 58 (exp_Negativo -> MENOS valor .)
    MAS             reduce using rule 58 (exp_Negativo -> MENOS valor .)
    MENOS           reduce using rule 58 (exp_Negativo -> MENOS valor .)
    MAYOR           reduce using rule 58 (exp_Negativo -> MENOS valor .)
    MENOR           reduce using rule 58 (exp_Negativo -> MENOS valor .)
    MAYORIGUAL      reduce using rule 58 (exp_Negativo -> MENOS valor .)
    MENORIGUAL      reduce using rule 58 (exp_Negativo -> MENOS valor .)
    AND             reduce using rule 58 (exp_Negativo -> MENOS valor .)
    INTERROGACION   reduce using rule 58 (exp_Negativo -> MENOS valor .)
    OR              reduce using rule 58 (exp_Negativo -> MENOS valor .)
    PUNTOCOMA       reduce using rule 58 (exp_Negativo -> MENOS valor .)
    PARDER          reduce using rule 58 (exp_Negativo -> MENOS valor .)
    COMA            reduce using rule 58 (exp_Negativo -> MENOS valor .)
    DOSPUNTOS       reduce using rule 58 (exp_Negativo -> MENOS valor .)


state 77

    (56) exp_Parentesis -> PARIZQ exp_Or . PARDER
    (33) exp_Or -> exp_Or . OR exp_And

    PARDER          shift and go to state 101
    OR              shift and go to state 61


state 78

    (14) asignacion -> ID MAS IGUAL op_Ternario . PUNTOCOMA

    PUNTOCOMA       shift and go to state 102


state 79

    (15) asignacion -> ID MENOS IGUAL op_Ternario . PUNTOCOMA

    PUNTOCOMA       shift and go to state 103


state 80

    (8) sIf -> IF PARIZQ op_Ternario PARDER . LLAVIZQ instrucciones sIf2

    LLAVIZQ         shift and go to state 104


state 81

    (28) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp . PARDER PUNTOCOMA
    (29) lista_exp -> lista_exp . COMA op_Ternario

    PARDER          shift and go to state 105
    COMA            shift and go to state 106


state 82

    (30) lista_exp -> op_Ternario .

    PARDER          reduce using rule 30 (lista_exp -> op_Ternario .)
    COMA            reduce using rule 30 (lista_exp -> op_Ternario .)


state 83

    (16) declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .

    CONSOLE         reduce using rule 16 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    ID              reduce using rule 16 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    IF              reduce using rule 16 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    VAR             reduce using rule 16 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    CONST           reduce using rule 16 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    $end            reduce using rule 16 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    LLAVDER         reduce using rule 16 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)


state 84

    (18) declaracion_explicita -> PUNTOCOMA .

    CONSOLE         reduce using rule 18 (declaracion_explicita -> PUNTOCOMA .)
    ID              reduce using rule 18 (declaracion_explicita -> PUNTOCOMA .)
    IF              reduce using rule 18 (declaracion_explicita -> PUNTOCOMA .)
    VAR             reduce using rule 18 (declaracion_explicita -> PUNTOCOMA .)
    CONST           reduce using rule 18 (declaracion_explicita -> PUNTOCOMA .)
    $end            reduce using rule 18 (declaracion_explicita -> PUNTOCOMA .)
    LLAVDER         reduce using rule 18 (declaracion_explicita -> PUNTOCOMA .)


state 85

    (19) declaracion_explicita -> IGUAL . op_Ternario PUNTOCOMA
    (31) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (32) op_Ternario -> . exp_Or
    (33) exp_Or -> . exp_Or OR exp_And
    (34) exp_Or -> . exp_And
    (35) exp_And -> . exp_And AND exp_Not
    (36) exp_And -> . exp_Not
    (37) exp_Not -> . lNot exp_Comp
    (38) exp_Not -> . exp_Comp
    (39) lNot -> . lNot NOT
    (40) lNot -> . NOT
    (41) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (43) exp_Comp -> . exp_rel
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (44) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (45) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (46) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> . exp_Sum_Menos
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    NOT             shift and go to state 32
    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    op_Ternario                    shift and go to state 107
    exp_Or                         shift and go to state 27
    exp_And                        shift and go to state 28
    exp_Not                        shift and go to state 29
    lNot                           shift and go to state 30
    exp_Comp                       shift and go to state 31
    exp_Sum_Menos                  shift and go to state 33
    exp_rel                        shift and go to state 34
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 86

    (20) declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .

    CONSOLE         reduce using rule 20 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    ID              reduce using rule 20 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    IF              reduce using rule 20 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    VAR             reduce using rule 20 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    CONST           reduce using rule 20 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    $end            reduce using rule 20 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    LLAVDER         reduce using rule 20 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)


state 87

    (31) op_Ternario -> exp_Or INTERROGACION exp_Or . DOSPUNTOS exp_Or
    (33) exp_Or -> exp_Or . OR exp_And

    DOSPUNTOS       shift and go to state 108
    OR              shift and go to state 61


state 88

    (33) exp_Or -> exp_Or OR exp_And .
    (35) exp_And -> exp_And . AND exp_Not

    INTERROGACION   reduce using rule 33 (exp_Or -> exp_Or OR exp_And .)
    OR              reduce using rule 33 (exp_Or -> exp_Or OR exp_And .)
    PUNTOCOMA       reduce using rule 33 (exp_Or -> exp_Or OR exp_And .)
    PARDER          reduce using rule 33 (exp_Or -> exp_Or OR exp_And .)
    COMA            reduce using rule 33 (exp_Or -> exp_Or OR exp_And .)
    DOSPUNTOS       reduce using rule 33 (exp_Or -> exp_Or OR exp_And .)
    AND             shift and go to state 62


state 89

    (35) exp_And -> exp_And AND exp_Not .

    AND             reduce using rule 35 (exp_And -> exp_And AND exp_Not .)
    INTERROGACION   reduce using rule 35 (exp_And -> exp_And AND exp_Not .)
    OR              reduce using rule 35 (exp_And -> exp_And AND exp_Not .)
    PUNTOCOMA       reduce using rule 35 (exp_And -> exp_And AND exp_Not .)
    PARDER          reduce using rule 35 (exp_And -> exp_And AND exp_Not .)
    COMA            reduce using rule 35 (exp_And -> exp_And AND exp_Not .)
    DOSPUNTOS       reduce using rule 35 (exp_And -> exp_And AND exp_Not .)


state 90

    (41) exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .
    (49) exp_Sum_Menos -> exp_Sum_Menos . MAS exp_Mul_Div
    (50) exp_Sum_Menos -> exp_Sum_Menos . MENOS exp_Mul_Div

    AND             reduce using rule 41 (exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .)
    INTERROGACION   reduce using rule 41 (exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .)
    OR              reduce using rule 41 (exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .)
    PUNTOCOMA       reduce using rule 41 (exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .)
    PARDER          reduce using rule 41 (exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .)
    COMA            reduce using rule 41 (exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .)
    DOSPUNTOS       reduce using rule 41 (exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68


state 91

    (42) exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .
    (49) exp_Sum_Menos -> exp_Sum_Menos . MAS exp_Mul_Div
    (50) exp_Sum_Menos -> exp_Sum_Menos . MENOS exp_Mul_Div

    AND             reduce using rule 42 (exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .)
    INTERROGACION   reduce using rule 42 (exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .)
    OR              reduce using rule 42 (exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .)
    PUNTOCOMA       reduce using rule 42 (exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .)
    PARDER          reduce using rule 42 (exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .)
    COMA            reduce using rule 42 (exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .)
    DOSPUNTOS       reduce using rule 42 (exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68


state 92

    (49) exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .
    (52) exp_Mul_Div -> exp_Mul_Div . POR exp_Parentesis
    (53) exp_Mul_Div -> exp_Mul_Div . DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> exp_Mul_Div . MODULO exp_Parentesis

    EQUIVALENTE     reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    DISTINTO        reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    MAS             reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    MENOS           reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    MAYOR           reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    MENOR           reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    MAYORIGUAL      reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    MENORIGUAL      reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    AND             reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    INTERROGACION   reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    OR              reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    PUNTOCOMA       reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    PARDER          reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    COMA            reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    DOSPUNTOS       reduce using rule 49 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    MODULO          shift and go to state 75


state 93

    (50) exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .
    (52) exp_Mul_Div -> exp_Mul_Div . POR exp_Parentesis
    (53) exp_Mul_Div -> exp_Mul_Div . DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> exp_Mul_Div . MODULO exp_Parentesis

    EQUIVALENTE     reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    DISTINTO        reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    MAS             reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    MENOS           reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    MAYOR           reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    MENOR           reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    MAYORIGUAL      reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    MENORIGUAL      reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    AND             reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    INTERROGACION   reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    OR              reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    PUNTOCOMA       reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    PARDER          reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    COMA            reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    DOSPUNTOS       reduce using rule 50 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    MODULO          shift and go to state 75


state 94

    (44) exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .
    (49) exp_Sum_Menos -> exp_Sum_Menos . MAS exp_Mul_Div
    (50) exp_Sum_Menos -> exp_Sum_Menos . MENOS exp_Mul_Div

    AND             reduce using rule 44 (exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .)
    INTERROGACION   reduce using rule 44 (exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .)
    OR              reduce using rule 44 (exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .)
    PUNTOCOMA       reduce using rule 44 (exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .)
    PARDER          reduce using rule 44 (exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .)
    COMA            reduce using rule 44 (exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .)
    DOSPUNTOS       reduce using rule 44 (exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68


state 95

    (45) exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .
    (49) exp_Sum_Menos -> exp_Sum_Menos . MAS exp_Mul_Div
    (50) exp_Sum_Menos -> exp_Sum_Menos . MENOS exp_Mul_Div

    AND             reduce using rule 45 (exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .)
    INTERROGACION   reduce using rule 45 (exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .)
    OR              reduce using rule 45 (exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .)
    PUNTOCOMA       reduce using rule 45 (exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .)
    PARDER          reduce using rule 45 (exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .)
    COMA            reduce using rule 45 (exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .)
    DOSPUNTOS       reduce using rule 45 (exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68


state 96

    (46) exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .
    (49) exp_Sum_Menos -> exp_Sum_Menos . MAS exp_Mul_Div
    (50) exp_Sum_Menos -> exp_Sum_Menos . MENOS exp_Mul_Div

    AND             reduce using rule 46 (exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .)
    INTERROGACION   reduce using rule 46 (exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .)
    OR              reduce using rule 46 (exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .)
    PUNTOCOMA       reduce using rule 46 (exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .)
    PARDER          reduce using rule 46 (exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .)
    COMA            reduce using rule 46 (exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .)
    DOSPUNTOS       reduce using rule 46 (exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68


state 97

    (47) exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .
    (49) exp_Sum_Menos -> exp_Sum_Menos . MAS exp_Mul_Div
    (50) exp_Sum_Menos -> exp_Sum_Menos . MENOS exp_Mul_Div

    AND             reduce using rule 47 (exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .)
    INTERROGACION   reduce using rule 47 (exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .)
    OR              reduce using rule 47 (exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .)
    PUNTOCOMA       reduce using rule 47 (exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .)
    PARDER          reduce using rule 47 (exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .)
    COMA            reduce using rule 47 (exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .)
    DOSPUNTOS       reduce using rule 47 (exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68


state 98

    (52) exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .

    POR             reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    DIVIDIDO        reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    MODULO          reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    EQUIVALENTE     reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    DISTINTO        reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    MAS             reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    MENOS           reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    MAYOR           reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    MENOR           reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    MAYORIGUAL      reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    MENORIGUAL      reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    AND             reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    INTERROGACION   reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    OR              reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    PUNTOCOMA       reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    PARDER          reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    COMA            reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    DOSPUNTOS       reduce using rule 52 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)


state 99

    (53) exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .

    POR             reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    DIVIDIDO        reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    MODULO          reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    EQUIVALENTE     reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    DISTINTO        reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    MAS             reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    MENOS           reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    MAYOR           reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    MENOR           reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    MAYORIGUAL      reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    MENORIGUAL      reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    AND             reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    INTERROGACION   reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    OR              reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    PUNTOCOMA       reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    PARDER          reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    COMA            reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    DOSPUNTOS       reduce using rule 53 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)


state 100

    (54) exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .

    POR             reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    DIVIDIDO        reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    MODULO          reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    EQUIVALENTE     reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    DISTINTO        reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    MAS             reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    MENOS           reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    MAYOR           reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    MENOR           reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    MAYORIGUAL      reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    MENORIGUAL      reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    AND             reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    INTERROGACION   reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    OR              reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    PUNTOCOMA       reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    PARDER          reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    COMA            reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    DOSPUNTOS       reduce using rule 54 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)


state 101

    (56) exp_Parentesis -> PARIZQ exp_Or PARDER .

    POR             reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    DIVIDIDO        reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    MODULO          reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    EQUIVALENTE     reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    DISTINTO        reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    MAS             reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    MENOS           reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    MAYOR           reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    MENOR           reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    MAYORIGUAL      reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    MENORIGUAL      reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    AND             reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    INTERROGACION   reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    OR              reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    PUNTOCOMA       reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    PARDER          reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    COMA            reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    DOSPUNTOS       reduce using rule 56 (exp_Parentesis -> PARIZQ exp_Or PARDER .)


state 102

    (14) asignacion -> ID MAS IGUAL op_Ternario PUNTOCOMA .

    CONSOLE         reduce using rule 14 (asignacion -> ID MAS IGUAL op_Ternario PUNTOCOMA .)
    ID              reduce using rule 14 (asignacion -> ID MAS IGUAL op_Ternario PUNTOCOMA .)
    IF              reduce using rule 14 (asignacion -> ID MAS IGUAL op_Ternario PUNTOCOMA .)
    VAR             reduce using rule 14 (asignacion -> ID MAS IGUAL op_Ternario PUNTOCOMA .)
    CONST           reduce using rule 14 (asignacion -> ID MAS IGUAL op_Ternario PUNTOCOMA .)
    $end            reduce using rule 14 (asignacion -> ID MAS IGUAL op_Ternario PUNTOCOMA .)
    LLAVDER         reduce using rule 14 (asignacion -> ID MAS IGUAL op_Ternario PUNTOCOMA .)


state 103

    (15) asignacion -> ID MENOS IGUAL op_Ternario PUNTOCOMA .

    CONSOLE         reduce using rule 15 (asignacion -> ID MENOS IGUAL op_Ternario PUNTOCOMA .)
    ID              reduce using rule 15 (asignacion -> ID MENOS IGUAL op_Ternario PUNTOCOMA .)
    IF              reduce using rule 15 (asignacion -> ID MENOS IGUAL op_Ternario PUNTOCOMA .)
    VAR             reduce using rule 15 (asignacion -> ID MENOS IGUAL op_Ternario PUNTOCOMA .)
    CONST           reduce using rule 15 (asignacion -> ID MENOS IGUAL op_Ternario PUNTOCOMA .)
    $end            reduce using rule 15 (asignacion -> ID MENOS IGUAL op_Ternario PUNTOCOMA .)
    LLAVDER         reduce using rule 15 (asignacion -> ID MENOS IGUAL op_Ternario PUNTOCOMA .)


state 104

    (8) sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ . instrucciones sIf2
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion
    (7) instruccion -> . sIf
    (28) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (16) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (17) declaracion -> . tipoVar ID declaracion_implicita
    (13) asignacion -> . ID IGUAL op_Ternario PUNTOCOMA
    (14) asignacion -> . ID MAS IGUAL op_Ternario PUNTOCOMA
    (15) asignacion -> . ID MENOS IGUAL op_Ternario PUNTOCOMA
    (8) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (21) tipoVar -> . VAR
    (22) tipoVar -> . CONST

    CONSOLE         shift and go to state 8
    ID              shift and go to state 10
    IF              shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13

    instrucciones                  shift and go to state 109
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    sIf                            shift and go to state 7
    tipoVar                        shift and go to state 9

state 105

    (28) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 110


state 106

    (29) lista_exp -> lista_exp COMA . op_Ternario
    (31) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (32) op_Ternario -> . exp_Or
    (33) exp_Or -> . exp_Or OR exp_And
    (34) exp_Or -> . exp_And
    (35) exp_And -> . exp_And AND exp_Not
    (36) exp_And -> . exp_Not
    (37) exp_Not -> . lNot exp_Comp
    (38) exp_Not -> . exp_Comp
    (39) lNot -> . lNot NOT
    (40) lNot -> . NOT
    (41) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (43) exp_Comp -> . exp_rel
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (44) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (45) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (46) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> . exp_Sum_Menos
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    NOT             shift and go to state 32
    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    op_Ternario                    shift and go to state 111
    exp_Or                         shift and go to state 27
    exp_And                        shift and go to state 28
    exp_Not                        shift and go to state 29
    lNot                           shift and go to state 30
    exp_Comp                       shift and go to state 31
    exp_Sum_Menos                  shift and go to state 33
    exp_rel                        shift and go to state 34
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 107

    (19) declaracion_explicita -> IGUAL op_Ternario . PUNTOCOMA

    PUNTOCOMA       shift and go to state 112


state 108

    (31) op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS . exp_Or
    (33) exp_Or -> . exp_Or OR exp_And
    (34) exp_Or -> . exp_And
    (35) exp_And -> . exp_And AND exp_Not
    (36) exp_And -> . exp_Not
    (37) exp_Not -> . lNot exp_Comp
    (38) exp_Not -> . exp_Comp
    (39) lNot -> . lNot NOT
    (40) lNot -> . NOT
    (41) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (42) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (43) exp_Comp -> . exp_rel
    (49) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (50) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (51) exp_Sum_Menos -> . exp_Mul_Div
    (44) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (45) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (46) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (47) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (48) exp_rel -> . exp_Sum_Menos
    (52) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (53) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (54) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (55) exp_Mul_Div -> . exp_Parentesis
    (56) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (57) exp_Parentesis -> . exp_Negativo
    (58) exp_Negativo -> . MENOS valor
    (59) exp_Negativo -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . CADENA
    (62) valor -> . DECIMAL
    (63) valor -> . CARACTER
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . NULL
    (67) valor -> . ID

    NOT             shift and go to state 32
    PARIZQ          shift and go to state 38
    MENOS           shift and go to state 36
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    DECIMAL         shift and go to state 43
    CARACTER        shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ID              shift and go to state 25

    exp_Or                         shift and go to state 113
    exp_And                        shift and go to state 28
    exp_Not                        shift and go to state 29
    lNot                           shift and go to state 30
    exp_Comp                       shift and go to state 31
    exp_Sum_Menos                  shift and go to state 33
    exp_rel                        shift and go to state 34
    exp_Mul_Div                    shift and go to state 35
    exp_Parentesis                 shift and go to state 37
    exp_Negativo                   shift and go to state 39
    valor                          shift and go to state 40

state 109

    (8) sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones . sIf2
    (2) instrucciones -> instrucciones . instruccion
    (9) sIf2 -> . LLAVDER ELSE sElse
    (10) sIf2 -> . LLAVDER
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion
    (7) instruccion -> . sIf
    (28) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (16) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (17) declaracion -> . tipoVar ID declaracion_implicita
    (13) asignacion -> . ID IGUAL op_Ternario PUNTOCOMA
    (14) asignacion -> . ID MAS IGUAL op_Ternario PUNTOCOMA
    (15) asignacion -> . ID MENOS IGUAL op_Ternario PUNTOCOMA
    (8) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (21) tipoVar -> . VAR
    (22) tipoVar -> . CONST

    LLAVDER         shift and go to state 115
    CONSOLE         shift and go to state 8
    ID              shift and go to state 10
    IF              shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13

    sIf2                           shift and go to state 114
    instruccion                    shift and go to state 14
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    sIf                            shift and go to state 7
    tipoVar                        shift and go to state 9

state 110

    (28) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .

    CONSOLE         reduce using rule 28 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)
    ID              reduce using rule 28 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)
    IF              reduce using rule 28 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)
    VAR             reduce using rule 28 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)
    CONST           reduce using rule 28 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)
    $end            reduce using rule 28 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)
    LLAVDER         reduce using rule 28 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)


state 111

    (29) lista_exp -> lista_exp COMA op_Ternario .

    PARDER          reduce using rule 29 (lista_exp -> lista_exp COMA op_Ternario .)
    COMA            reduce using rule 29 (lista_exp -> lista_exp COMA op_Ternario .)


state 112

    (19) declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .

    CONSOLE         reduce using rule 19 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    ID              reduce using rule 19 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    IF              reduce using rule 19 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    VAR             reduce using rule 19 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    CONST           reduce using rule 19 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    $end            reduce using rule 19 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    LLAVDER         reduce using rule 19 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)


state 113

    (31) op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or .
    (33) exp_Or -> exp_Or . OR exp_And

    PUNTOCOMA       reduce using rule 31 (op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or .)
    PARDER          reduce using rule 31 (op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or .)
    COMA            reduce using rule 31 (op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or .)
    OR              shift and go to state 61


state 114

    (8) sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .

    CONSOLE         reduce using rule 8 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)
    ID              reduce using rule 8 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)
    IF              reduce using rule 8 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)
    VAR             reduce using rule 8 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)
    CONST           reduce using rule 8 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)
    $end            reduce using rule 8 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)
    LLAVDER         reduce using rule 8 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)


state 115

    (9) sIf2 -> LLAVDER . ELSE sElse
    (10) sIf2 -> LLAVDER .

    ELSE            shift and go to state 116
    CONSOLE         reduce using rule 10 (sIf2 -> LLAVDER .)
    ID              reduce using rule 10 (sIf2 -> LLAVDER .)
    IF              reduce using rule 10 (sIf2 -> LLAVDER .)
    VAR             reduce using rule 10 (sIf2 -> LLAVDER .)
    CONST           reduce using rule 10 (sIf2 -> LLAVDER .)
    $end            reduce using rule 10 (sIf2 -> LLAVDER .)
    LLAVDER         reduce using rule 10 (sIf2 -> LLAVDER .)


state 116

    (9) sIf2 -> LLAVDER ELSE . sElse
    (11) sElse -> . LLAVIZQ instrucciones LLAVDER
    (12) sElse -> . sIf
    (8) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2

    LLAVIZQ         shift and go to state 118
    IF              shift and go to state 11

    sElse                          shift and go to state 117
    sIf                            shift and go to state 119

state 117

    (9) sIf2 -> LLAVDER ELSE sElse .

    CONSOLE         reduce using rule 9 (sIf2 -> LLAVDER ELSE sElse .)
    ID              reduce using rule 9 (sIf2 -> LLAVDER ELSE sElse .)
    IF              reduce using rule 9 (sIf2 -> LLAVDER ELSE sElse .)
    VAR             reduce using rule 9 (sIf2 -> LLAVDER ELSE sElse .)
    CONST           reduce using rule 9 (sIf2 -> LLAVDER ELSE sElse .)
    $end            reduce using rule 9 (sIf2 -> LLAVDER ELSE sElse .)
    LLAVDER         reduce using rule 9 (sIf2 -> LLAVDER ELSE sElse .)


state 118

    (11) sElse -> LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion
    (7) instruccion -> . sIf
    (28) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (16) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (17) declaracion -> . tipoVar ID declaracion_implicita
    (13) asignacion -> . ID IGUAL op_Ternario PUNTOCOMA
    (14) asignacion -> . ID MAS IGUAL op_Ternario PUNTOCOMA
    (15) asignacion -> . ID MENOS IGUAL op_Ternario PUNTOCOMA
    (8) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (21) tipoVar -> . VAR
    (22) tipoVar -> . CONST

    CONSOLE         shift and go to state 8
    ID              shift and go to state 10
    IF              shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13

    instrucciones                  shift and go to state 120
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    sIf                            shift and go to state 7
    tipoVar                        shift and go to state 9

state 119

    (12) sElse -> sIf .

    CONSOLE         reduce using rule 12 (sElse -> sIf .)
    ID              reduce using rule 12 (sElse -> sIf .)
    IF              reduce using rule 12 (sElse -> sIf .)
    VAR             reduce using rule 12 (sElse -> sIf .)
    CONST           reduce using rule 12 (sElse -> sIf .)
    $end            reduce using rule 12 (sElse -> sIf .)
    LLAVDER         reduce using rule 12 (sElse -> sIf .)


state 120

    (11) sElse -> LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion
    (7) instruccion -> . sIf
    (28) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (16) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (17) declaracion -> . tipoVar ID declaracion_implicita
    (13) asignacion -> . ID IGUAL op_Ternario PUNTOCOMA
    (14) asignacion -> . ID MAS IGUAL op_Ternario PUNTOCOMA
    (15) asignacion -> . ID MENOS IGUAL op_Ternario PUNTOCOMA
    (8) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (21) tipoVar -> . VAR
    (22) tipoVar -> . CONST

    LLAVDER         shift and go to state 121
    CONSOLE         shift and go to state 8
    ID              shift and go to state 10
    IF              shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13

    instruccion                    shift and go to state 14
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    sIf                            shift and go to state 7
    tipoVar                        shift and go to state 9

state 121

    (11) sElse -> LLAVIZQ instrucciones LLAVDER .

    CONSOLE         reduce using rule 11 (sElse -> LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 11 (sElse -> LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 11 (sElse -> LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 11 (sElse -> LLAVIZQ instrucciones LLAVDER .)
    CONST           reduce using rule 11 (sElse -> LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 11 (sElse -> LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 11 (sElse -> LLAVIZQ instrucciones LLAVDER .)

