Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENTBLOCK
    FUNCTION
    INTERFACE

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir_instr
Rule 5     instruccion -> declaracion
Rule 6     instruccion -> asignacion PUNTOCOMA
Rule 7     instruccion -> sIf
Rule 8     instruccion -> sWhile
Rule 9     instruccion -> sFor
Rule 10    sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
Rule 11    sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER
Rule 12    sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
Rule 13    sIf2 -> LLAVDER ELSE sElse
Rule 14    sIf2 -> LLAVDER
Rule 15    sElse -> LLAVIZQ instrucciones LLAVDER
Rule 16    sElse -> sIf
Rule 17    asignacion -> ID IGUAL op_Ternario
Rule 18    asignacion -> ID MAS IGUAL op_Ternario
Rule 19    asignacion -> ID MENOS IGUAL op_Ternario
Rule 20    asignacion -> ID MAS MAS
Rule 21    asignacion -> ID MENOS MENOS
Rule 22    declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita
Rule 23    declaracion -> tipoVar ID declaracion_implicita
Rule 24    declaracion_explicita -> PUNTOCOMA
Rule 25    declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA
Rule 26    declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA
Rule 27    tipoVar -> VAR
Rule 28    tipoVar -> CONST
Rule 29    tipo -> NUMBER
Rule 30    tipo -> FLOAT
Rule 31    tipo -> STRING
Rule 32    tipo -> BOOLEAN
Rule 33    tipo -> CHAR
Rule 34    imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
Rule 35    lista_exp -> lista_exp COMA op_Ternario
Rule 36    lista_exp -> op_Ternario
Rule 37    op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
Rule 38    op_Ternario -> exp_Or
Rule 39    exp_Or -> exp_Or OR exp_And
Rule 40    exp_Or -> exp_And
Rule 41    exp_And -> exp_And AND exp_Not
Rule 42    exp_And -> exp_Not
Rule 43    exp_Not -> lNot exp_Comp
Rule 44    exp_Not -> exp_Comp
Rule 45    lNot -> lNot NOT
Rule 46    lNot -> NOT
Rule 47    exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
Rule 48    exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos
Rule 49    exp_Comp -> exp_rel
Rule 50    exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos
Rule 51    exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos
Rule 52    exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
Rule 53    exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos
Rule 54    exp_rel -> exp_Sum_Menos
Rule 55    exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div
Rule 56    exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div
Rule 57    exp_Sum_Menos -> exp_Mul_Div
Rule 58    exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis
Rule 59    exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis
Rule 60    exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis
Rule 61    exp_Mul_Div -> exp_Parentesis
Rule 62    exp_Parentesis -> PARIZQ exp_Or PARDER
Rule 63    exp_Parentesis -> exp_Negativo
Rule 64    exp_Negativo -> MENOS valor
Rule 65    exp_Negativo -> valor
Rule 66    valor -> ENTERO
Rule 67    valor -> CADENA
Rule 68    valor -> DECIMAL
Rule 69    valor -> CARACTER
Rule 70    valor -> TRUE
Rule 71    valor -> FALSE
Rule 72    valor -> NULL
Rule 73    valor -> ID

Terminals, with rules where they appear

AND                  : 41
BOOLEAN              : 32
CADENA               : 67
CARACTER             : 69
CHAR                 : 33
COMA                 : 35
COMMENTBLOCK         : 
CONSOLE              : 34
CONST                : 28
DECIMAL              : 68
DISTINTO             : 48
DIVIDIDO             : 59
DOSPUNTOS            : 22 37
ELSE                 : 13
ENTERO               : 66
EQUIVALENTE          : 47
FALSE                : 71
FLOAT                : 30
FOR                  : 10
FUNCTION             : 
ID                   : 17 18 19 20 21 22 23 73
IF                   : 12
IGUAL                : 17 18 19 25 26
INTERFACE            : 
INTERROGACION        : 37
LLAVDER              : 10 11 13 14 15
LLAVIZQ              : 10 11 12 15
LOG                  : 34
MAS                  : 18 20 20 55
MAYOR                : 50
MAYORIGUAL           : 52
MENOR                : 51
MENORIGUAL           : 53
MENOS                : 19 21 21 56 64
MODULO               : 60
NOT                  : 45 46
NULL                 : 72
NUMBER               : 29
OR                   : 39
PARDER               : 10 11 12 34 62
PARIZQ               : 10 11 12 34 62
POR                  : 58
PUNTO                : 34
PUNTOCOMA            : 6 10 24 25 26 34
STRING               : 31
TRUE                 : 70
VAR                  : 27
WHILE                : 11
error                : 

Nonterminals, with rules where they appear

asignacion           : 6 10
declaracion          : 5 10
declaracion_explicita : 22
declaracion_implicita : 23
exp_And              : 39 40 41
exp_Comp             : 43 44
exp_Mul_Div          : 55 56 57 58 59 60
exp_Negativo         : 63
exp_Not              : 41 42
exp_Or               : 37 37 37 38 39 62
exp_Parentesis       : 58 59 60 61
exp_Sum_Menos        : 47 47 48 48 50 50 51 51 52 52 53 53 54 55 56
exp_rel              : 49
imprimir_instr       : 4
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 10 11 12 15
lNot                 : 43 45
lista_exp            : 34 35
op_Ternario          : 10 11 12 17 18 19 25 26 35 36
sElse                : 13
sFor                 : 9
sIf                  : 7 16
sIf2                 : 12
sWhile               : 8
tipo                 : 22
tipoVar              : 22 23
valor                : 64 65

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . sIf
    (8) instruccion -> . sWhile
    (9) instruccion -> . sFor
    (34) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (22) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (23) declaracion -> . tipoVar ID declaracion_implicita
    (17) asignacion -> . ID IGUAL op_Ternario
    (18) asignacion -> . ID MAS IGUAL op_Ternario
    (19) asignacion -> . ID MENOS IGUAL op_Ternario
    (20) asignacion -> . ID MAS MAS
    (21) asignacion -> . ID MENOS MENOS
    (12) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (11) sWhile -> . WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER
    (10) sFor -> . FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (27) tipoVar -> . VAR
    (28) tipoVar -> . CONST

    CONSOLE         shift and go to state 10
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    VAR             shift and go to state 16
    CONST           shift and go to state 17

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    sIf                            shift and go to state 7
    sWhile                         shift and go to state 8
    sFor                           shift and go to state 9
    tipoVar                        shift and go to state 11

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . sIf
    (8) instruccion -> . sWhile
    (9) instruccion -> . sFor
    (34) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (22) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (23) declaracion -> . tipoVar ID declaracion_implicita
    (17) asignacion -> . ID IGUAL op_Ternario
    (18) asignacion -> . ID MAS IGUAL op_Ternario
    (19) asignacion -> . ID MENOS IGUAL op_Ternario
    (20) asignacion -> . ID MAS MAS
    (21) asignacion -> . ID MENOS MENOS
    (12) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (11) sWhile -> . WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER
    (10) sFor -> . FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (27) tipoVar -> . VAR
    (28) tipoVar -> . CONST

    $end            reduce using rule 1 (init -> instrucciones .)
    CONSOLE         shift and go to state 10
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    VAR             shift and go to state 16
    CONST           shift and go to state 17

    instruccion                    shift and go to state 18
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    sIf                            shift and go to state 7
    sWhile                         shift and go to state 8
    sFor                           shift and go to state 9
    tipoVar                        shift and go to state 11

state 3

    (3) instrucciones -> instruccion .

    CONSOLE         reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instruccion .)
    VAR             reduce using rule 3 (instrucciones -> instruccion .)
    CONST           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVDER         reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir_instr .

    CONSOLE         reduce using rule 4 (instruccion -> imprimir_instr .)
    ID              reduce using rule 4 (instruccion -> imprimir_instr .)
    IF              reduce using rule 4 (instruccion -> imprimir_instr .)
    WHILE           reduce using rule 4 (instruccion -> imprimir_instr .)
    FOR             reduce using rule 4 (instruccion -> imprimir_instr .)
    VAR             reduce using rule 4 (instruccion -> imprimir_instr .)
    CONST           reduce using rule 4 (instruccion -> imprimir_instr .)
    $end            reduce using rule 4 (instruccion -> imprimir_instr .)
    LLAVDER         reduce using rule 4 (instruccion -> imprimir_instr .)


state 5

    (5) instruccion -> declaracion .

    CONSOLE         reduce using rule 5 (instruccion -> declaracion .)
    ID              reduce using rule 5 (instruccion -> declaracion .)
    IF              reduce using rule 5 (instruccion -> declaracion .)
    WHILE           reduce using rule 5 (instruccion -> declaracion .)
    FOR             reduce using rule 5 (instruccion -> declaracion .)
    VAR             reduce using rule 5 (instruccion -> declaracion .)
    CONST           reduce using rule 5 (instruccion -> declaracion .)
    $end            reduce using rule 5 (instruccion -> declaracion .)
    LLAVDER         reduce using rule 5 (instruccion -> declaracion .)


state 6

    (6) instruccion -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 19


state 7

    (7) instruccion -> sIf .

    CONSOLE         reduce using rule 7 (instruccion -> sIf .)
    ID              reduce using rule 7 (instruccion -> sIf .)
    IF              reduce using rule 7 (instruccion -> sIf .)
    WHILE           reduce using rule 7 (instruccion -> sIf .)
    FOR             reduce using rule 7 (instruccion -> sIf .)
    VAR             reduce using rule 7 (instruccion -> sIf .)
    CONST           reduce using rule 7 (instruccion -> sIf .)
    $end            reduce using rule 7 (instruccion -> sIf .)
    LLAVDER         reduce using rule 7 (instruccion -> sIf .)


state 8

    (8) instruccion -> sWhile .

    CONSOLE         reduce using rule 8 (instruccion -> sWhile .)
    ID              reduce using rule 8 (instruccion -> sWhile .)
    IF              reduce using rule 8 (instruccion -> sWhile .)
    WHILE           reduce using rule 8 (instruccion -> sWhile .)
    FOR             reduce using rule 8 (instruccion -> sWhile .)
    VAR             reduce using rule 8 (instruccion -> sWhile .)
    CONST           reduce using rule 8 (instruccion -> sWhile .)
    $end            reduce using rule 8 (instruccion -> sWhile .)
    LLAVDER         reduce using rule 8 (instruccion -> sWhile .)


state 9

    (9) instruccion -> sFor .

    CONSOLE         reduce using rule 9 (instruccion -> sFor .)
    ID              reduce using rule 9 (instruccion -> sFor .)
    IF              reduce using rule 9 (instruccion -> sFor .)
    WHILE           reduce using rule 9 (instruccion -> sFor .)
    FOR             reduce using rule 9 (instruccion -> sFor .)
    VAR             reduce using rule 9 (instruccion -> sFor .)
    CONST           reduce using rule 9 (instruccion -> sFor .)
    $end            reduce using rule 9 (instruccion -> sFor .)
    LLAVDER         reduce using rule 9 (instruccion -> sFor .)


state 10

    (34) imprimir_instr -> CONSOLE . PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA

    PUNTO           shift and go to state 20


state 11

    (22) declaracion -> tipoVar . ID DOSPUNTOS tipo declaracion_explicita
    (23) declaracion -> tipoVar . ID declaracion_implicita

    ID              shift and go to state 21


state 12

    (17) asignacion -> ID . IGUAL op_Ternario
    (18) asignacion -> ID . MAS IGUAL op_Ternario
    (19) asignacion -> ID . MENOS IGUAL op_Ternario
    (20) asignacion -> ID . MAS MAS
    (21) asignacion -> ID . MENOS MENOS

    IGUAL           shift and go to state 22
    MAS             shift and go to state 23
    MENOS           shift and go to state 24


state 13

    (12) sIf -> IF . PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2

    PARIZQ          shift and go to state 25


state 14

    (11) sWhile -> WHILE . PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 26


state 15

    (10) sFor -> FOR . PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 27


state 16

    (27) tipoVar -> VAR .

    ID              reduce using rule 27 (tipoVar -> VAR .)


state 17

    (28) tipoVar -> CONST .

    ID              reduce using rule 28 (tipoVar -> CONST .)


state 18

    (2) instrucciones -> instrucciones instruccion .

    CONSOLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VAR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONST           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVDER         reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 19

    (6) instruccion -> asignacion PUNTOCOMA .

    CONSOLE         reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    ID              reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    IF              reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    WHILE           reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    FOR             reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    VAR             reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    CONST           reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    $end            reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    LLAVDER         reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)


state 20

    (34) imprimir_instr -> CONSOLE PUNTO . LOG PARIZQ lista_exp PARDER PUNTOCOMA

    LOG             shift and go to state 28


state 21

    (22) declaracion -> tipoVar ID . DOSPUNTOS tipo declaracion_explicita
    (23) declaracion -> tipoVar ID . declaracion_implicita
    (26) declaracion_implicita -> . IGUAL op_Ternario PUNTOCOMA

    DOSPUNTOS       shift and go to state 29
    IGUAL           shift and go to state 31

    declaracion_implicita          shift and go to state 30

state 22

    (17) asignacion -> ID IGUAL . op_Ternario
    (37) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (38) op_Ternario -> . exp_Or
    (39) exp_Or -> . exp_Or OR exp_And
    (40) exp_Or -> . exp_And
    (41) exp_And -> . exp_And AND exp_Not
    (42) exp_And -> . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    op_Ternario                    shift and go to state 33
    exp_Or                         shift and go to state 34
    exp_And                        shift and go to state 35
    exp_Not                        shift and go to state 36
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 23

    (18) asignacion -> ID MAS . IGUAL op_Ternario
    (20) asignacion -> ID MAS . MAS

    IGUAL           shift and go to state 56
    MAS             shift and go to state 55


state 24

    (19) asignacion -> ID MENOS . IGUAL op_Ternario
    (21) asignacion -> ID MENOS . MENOS

    IGUAL           shift and go to state 58
    MENOS           shift and go to state 57


state 25

    (12) sIf -> IF PARIZQ . op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (37) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (38) op_Ternario -> . exp_Or
    (39) exp_Or -> . exp_Or OR exp_And
    (40) exp_Or -> . exp_And
    (41) exp_And -> . exp_And AND exp_Not
    (42) exp_And -> . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    op_Ternario                    shift and go to state 59
    exp_Or                         shift and go to state 34
    exp_And                        shift and go to state 35
    exp_Not                        shift and go to state 36
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 26

    (11) sWhile -> WHILE PARIZQ . op_Ternario PARDER LLAVIZQ instrucciones LLAVDER
    (37) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (38) op_Ternario -> . exp_Or
    (39) exp_Or -> . exp_Or OR exp_And
    (40) exp_Or -> . exp_And
    (41) exp_And -> . exp_And AND exp_Not
    (42) exp_And -> . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    op_Ternario                    shift and go to state 60
    exp_Or                         shift and go to state 34
    exp_And                        shift and go to state 35
    exp_Not                        shift and go to state 36
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 27

    (10) sFor -> FOR PARIZQ . declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (22) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (23) declaracion -> . tipoVar ID declaracion_implicita
    (27) tipoVar -> . VAR
    (28) tipoVar -> . CONST

    VAR             shift and go to state 16
    CONST           shift and go to state 17

    declaracion                    shift and go to state 61
    tipoVar                        shift and go to state 11

state 28

    (34) imprimir_instr -> CONSOLE PUNTO LOG . PARIZQ lista_exp PARDER PUNTOCOMA

    PARIZQ          shift and go to state 62


state 29

    (22) declaracion -> tipoVar ID DOSPUNTOS . tipo declaracion_explicita
    (29) tipo -> . NUMBER
    (30) tipo -> . FLOAT
    (31) tipo -> . STRING
    (32) tipo -> . BOOLEAN
    (33) tipo -> . CHAR

    NUMBER          shift and go to state 64
    FLOAT           shift and go to state 65
    STRING          shift and go to state 66
    BOOLEAN         shift and go to state 67
    CHAR            shift and go to state 68

    tipo                           shift and go to state 63

state 30

    (23) declaracion -> tipoVar ID declaracion_implicita .

    CONSOLE         reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    ID              reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    IF              reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    WHILE           reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    FOR             reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    VAR             reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    CONST           reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    $end            reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    NOT             reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    PARIZQ          reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    MENOS           reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    ENTERO          reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    CADENA          reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    DECIMAL         reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    CARACTER        reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    TRUE            reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    FALSE           reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    NULL            reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)
    LLAVDER         reduce using rule 23 (declaracion -> tipoVar ID declaracion_implicita .)


state 31

    (26) declaracion_implicita -> IGUAL . op_Ternario PUNTOCOMA
    (37) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (38) op_Ternario -> . exp_Or
    (39) exp_Or -> . exp_Or OR exp_And
    (40) exp_Or -> . exp_And
    (41) exp_And -> . exp_And AND exp_Not
    (42) exp_And -> . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    op_Ternario                    shift and go to state 69
    exp_Or                         shift and go to state 34
    exp_And                        shift and go to state 35
    exp_Not                        shift and go to state 36
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 32

    (73) valor -> ID .

    POR             reduce using rule 73 (valor -> ID .)
    DIVIDIDO        reduce using rule 73 (valor -> ID .)
    MODULO          reduce using rule 73 (valor -> ID .)
    EQUIVALENTE     reduce using rule 73 (valor -> ID .)
    DISTINTO        reduce using rule 73 (valor -> ID .)
    MAS             reduce using rule 73 (valor -> ID .)
    MENOS           reduce using rule 73 (valor -> ID .)
    MAYOR           reduce using rule 73 (valor -> ID .)
    MENOR           reduce using rule 73 (valor -> ID .)
    MAYORIGUAL      reduce using rule 73 (valor -> ID .)
    MENORIGUAL      reduce using rule 73 (valor -> ID .)
    AND             reduce using rule 73 (valor -> ID .)
    INTERROGACION   reduce using rule 73 (valor -> ID .)
    OR              reduce using rule 73 (valor -> ID .)
    PUNTOCOMA       reduce using rule 73 (valor -> ID .)
    PARDER          reduce using rule 73 (valor -> ID .)
    COMA            reduce using rule 73 (valor -> ID .)
    DOSPUNTOS       reduce using rule 73 (valor -> ID .)


state 33

    (17) asignacion -> ID IGUAL op_Ternario .

    PUNTOCOMA       reduce using rule 17 (asignacion -> ID IGUAL op_Ternario .)
    PARDER          reduce using rule 17 (asignacion -> ID IGUAL op_Ternario .)


state 34

    (37) op_Ternario -> exp_Or . INTERROGACION exp_Or DOSPUNTOS exp_Or
    (38) op_Ternario -> exp_Or .
    (39) exp_Or -> exp_Or . OR exp_And

    INTERROGACION   shift and go to state 70
    PUNTOCOMA       reduce using rule 38 (op_Ternario -> exp_Or .)
    PARDER          reduce using rule 38 (op_Ternario -> exp_Or .)
    COMA            reduce using rule 38 (op_Ternario -> exp_Or .)
    OR              shift and go to state 71


state 35

    (40) exp_Or -> exp_And .
    (41) exp_And -> exp_And . AND exp_Not

    INTERROGACION   reduce using rule 40 (exp_Or -> exp_And .)
    OR              reduce using rule 40 (exp_Or -> exp_And .)
    PUNTOCOMA       reduce using rule 40 (exp_Or -> exp_And .)
    PARDER          reduce using rule 40 (exp_Or -> exp_And .)
    COMA            reduce using rule 40 (exp_Or -> exp_And .)
    DOSPUNTOS       reduce using rule 40 (exp_Or -> exp_And .)
    AND             shift and go to state 72


state 36

    (42) exp_And -> exp_Not .

    AND             reduce using rule 42 (exp_And -> exp_Not .)
    INTERROGACION   reduce using rule 42 (exp_And -> exp_Not .)
    OR              reduce using rule 42 (exp_And -> exp_Not .)
    PUNTOCOMA       reduce using rule 42 (exp_And -> exp_Not .)
    PARDER          reduce using rule 42 (exp_And -> exp_Not .)
    COMA            reduce using rule 42 (exp_And -> exp_Not .)
    DOSPUNTOS       reduce using rule 42 (exp_And -> exp_Not .)


state 37

    (43) exp_Not -> lNot . exp_Comp
    (45) lNot -> lNot . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 74
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Comp                       shift and go to state 73
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 38

    (44) exp_Not -> exp_Comp .

    AND             reduce using rule 44 (exp_Not -> exp_Comp .)
    INTERROGACION   reduce using rule 44 (exp_Not -> exp_Comp .)
    OR              reduce using rule 44 (exp_Not -> exp_Comp .)
    PUNTOCOMA       reduce using rule 44 (exp_Not -> exp_Comp .)
    PARDER          reduce using rule 44 (exp_Not -> exp_Comp .)
    COMA            reduce using rule 44 (exp_Not -> exp_Comp .)
    DOSPUNTOS       reduce using rule 44 (exp_Not -> exp_Comp .)


state 39

    (46) lNot -> NOT .

    NOT             reduce using rule 46 (lNot -> NOT .)
    PARIZQ          reduce using rule 46 (lNot -> NOT .)
    MENOS           reduce using rule 46 (lNot -> NOT .)
    ENTERO          reduce using rule 46 (lNot -> NOT .)
    CADENA          reduce using rule 46 (lNot -> NOT .)
    DECIMAL         reduce using rule 46 (lNot -> NOT .)
    CARACTER        reduce using rule 46 (lNot -> NOT .)
    TRUE            reduce using rule 46 (lNot -> NOT .)
    FALSE           reduce using rule 46 (lNot -> NOT .)
    NULL            reduce using rule 46 (lNot -> NOT .)
    ID              reduce using rule 46 (lNot -> NOT .)


state 40

    (47) exp_Comp -> exp_Sum_Menos . EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> exp_Sum_Menos . DISTINTO exp_Sum_Menos
    (55) exp_Sum_Menos -> exp_Sum_Menos . MAS exp_Mul_Div
    (56) exp_Sum_Menos -> exp_Sum_Menos . MENOS exp_Mul_Div
    (50) exp_rel -> exp_Sum_Menos . MAYOR exp_Sum_Menos
    (51) exp_rel -> exp_Sum_Menos . MENOR exp_Sum_Menos
    (52) exp_rel -> exp_Sum_Menos . MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> exp_Sum_Menos . MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> exp_Sum_Menos .

    EQUIVALENTE     shift and go to state 75
    DISTINTO        shift and go to state 76
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    AND             reduce using rule 54 (exp_rel -> exp_Sum_Menos .)
    INTERROGACION   reduce using rule 54 (exp_rel -> exp_Sum_Menos .)
    OR              reduce using rule 54 (exp_rel -> exp_Sum_Menos .)
    PUNTOCOMA       reduce using rule 54 (exp_rel -> exp_Sum_Menos .)
    PARDER          reduce using rule 54 (exp_rel -> exp_Sum_Menos .)
    COMA            reduce using rule 54 (exp_rel -> exp_Sum_Menos .)
    DOSPUNTOS       reduce using rule 54 (exp_rel -> exp_Sum_Menos .)


state 41

    (49) exp_Comp -> exp_rel .

    AND             reduce using rule 49 (exp_Comp -> exp_rel .)
    INTERROGACION   reduce using rule 49 (exp_Comp -> exp_rel .)
    OR              reduce using rule 49 (exp_Comp -> exp_rel .)
    PUNTOCOMA       reduce using rule 49 (exp_Comp -> exp_rel .)
    PARDER          reduce using rule 49 (exp_Comp -> exp_rel .)
    COMA            reduce using rule 49 (exp_Comp -> exp_rel .)
    DOSPUNTOS       reduce using rule 49 (exp_Comp -> exp_rel .)


state 42

    (57) exp_Sum_Menos -> exp_Mul_Div .
    (58) exp_Mul_Div -> exp_Mul_Div . POR exp_Parentesis
    (59) exp_Mul_Div -> exp_Mul_Div . DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> exp_Mul_Div . MODULO exp_Parentesis

    EQUIVALENTE     reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    DISTINTO        reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    MAS             reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    MENOS           reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    MAYOR           reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    MENOR           reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    MAYORIGUAL      reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    MENORIGUAL      reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    AND             reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    INTERROGACION   reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    OR              reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    PUNTOCOMA       reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    PARDER          reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    COMA            reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    DOSPUNTOS       reduce using rule 57 (exp_Sum_Menos -> exp_Mul_Div .)
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    MODULO          shift and go to state 85


state 43

    (64) exp_Negativo -> MENOS . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    valor                          shift and go to state 86

state 44

    (61) exp_Mul_Div -> exp_Parentesis .

    POR             reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    DIVIDIDO        reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    MODULO          reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    EQUIVALENTE     reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    DISTINTO        reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    MAS             reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    MENOS           reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    MAYOR           reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    MENOR           reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    MAYORIGUAL      reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    MENORIGUAL      reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    AND             reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    INTERROGACION   reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    OR              reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    PUNTOCOMA       reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    PARDER          reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    COMA            reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)
    DOSPUNTOS       reduce using rule 61 (exp_Mul_Div -> exp_Parentesis .)


state 45

    (62) exp_Parentesis -> PARIZQ . exp_Or PARDER
    (39) exp_Or -> . exp_Or OR exp_And
    (40) exp_Or -> . exp_And
    (41) exp_And -> . exp_And AND exp_Not
    (42) exp_And -> . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Or                         shift and go to state 87
    exp_And                        shift and go to state 35
    exp_Not                        shift and go to state 36
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 46

    (63) exp_Parentesis -> exp_Negativo .

    POR             reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    DIVIDIDO        reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    MODULO          reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    EQUIVALENTE     reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    DISTINTO        reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    MAS             reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    MENOS           reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    MAYOR           reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    MENOR           reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    MAYORIGUAL      reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    MENORIGUAL      reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    AND             reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    INTERROGACION   reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    OR              reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    PUNTOCOMA       reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    PARDER          reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    COMA            reduce using rule 63 (exp_Parentesis -> exp_Negativo .)
    DOSPUNTOS       reduce using rule 63 (exp_Parentesis -> exp_Negativo .)


state 47

    (65) exp_Negativo -> valor .

    POR             reduce using rule 65 (exp_Negativo -> valor .)
    DIVIDIDO        reduce using rule 65 (exp_Negativo -> valor .)
    MODULO          reduce using rule 65 (exp_Negativo -> valor .)
    EQUIVALENTE     reduce using rule 65 (exp_Negativo -> valor .)
    DISTINTO        reduce using rule 65 (exp_Negativo -> valor .)
    MAS             reduce using rule 65 (exp_Negativo -> valor .)
    MENOS           reduce using rule 65 (exp_Negativo -> valor .)
    MAYOR           reduce using rule 65 (exp_Negativo -> valor .)
    MENOR           reduce using rule 65 (exp_Negativo -> valor .)
    MAYORIGUAL      reduce using rule 65 (exp_Negativo -> valor .)
    MENORIGUAL      reduce using rule 65 (exp_Negativo -> valor .)
    AND             reduce using rule 65 (exp_Negativo -> valor .)
    INTERROGACION   reduce using rule 65 (exp_Negativo -> valor .)
    OR              reduce using rule 65 (exp_Negativo -> valor .)
    PUNTOCOMA       reduce using rule 65 (exp_Negativo -> valor .)
    PARDER          reduce using rule 65 (exp_Negativo -> valor .)
    COMA            reduce using rule 65 (exp_Negativo -> valor .)
    DOSPUNTOS       reduce using rule 65 (exp_Negativo -> valor .)


state 48

    (66) valor -> ENTERO .

    POR             reduce using rule 66 (valor -> ENTERO .)
    DIVIDIDO        reduce using rule 66 (valor -> ENTERO .)
    MODULO          reduce using rule 66 (valor -> ENTERO .)
    EQUIVALENTE     reduce using rule 66 (valor -> ENTERO .)
    DISTINTO        reduce using rule 66 (valor -> ENTERO .)
    MAS             reduce using rule 66 (valor -> ENTERO .)
    MENOS           reduce using rule 66 (valor -> ENTERO .)
    MAYOR           reduce using rule 66 (valor -> ENTERO .)
    MENOR           reduce using rule 66 (valor -> ENTERO .)
    MAYORIGUAL      reduce using rule 66 (valor -> ENTERO .)
    MENORIGUAL      reduce using rule 66 (valor -> ENTERO .)
    AND             reduce using rule 66 (valor -> ENTERO .)
    INTERROGACION   reduce using rule 66 (valor -> ENTERO .)
    OR              reduce using rule 66 (valor -> ENTERO .)
    PUNTOCOMA       reduce using rule 66 (valor -> ENTERO .)
    PARDER          reduce using rule 66 (valor -> ENTERO .)
    COMA            reduce using rule 66 (valor -> ENTERO .)
    DOSPUNTOS       reduce using rule 66 (valor -> ENTERO .)


state 49

    (67) valor -> CADENA .

    POR             reduce using rule 67 (valor -> CADENA .)
    DIVIDIDO        reduce using rule 67 (valor -> CADENA .)
    MODULO          reduce using rule 67 (valor -> CADENA .)
    EQUIVALENTE     reduce using rule 67 (valor -> CADENA .)
    DISTINTO        reduce using rule 67 (valor -> CADENA .)
    MAS             reduce using rule 67 (valor -> CADENA .)
    MENOS           reduce using rule 67 (valor -> CADENA .)
    MAYOR           reduce using rule 67 (valor -> CADENA .)
    MENOR           reduce using rule 67 (valor -> CADENA .)
    MAYORIGUAL      reduce using rule 67 (valor -> CADENA .)
    MENORIGUAL      reduce using rule 67 (valor -> CADENA .)
    AND             reduce using rule 67 (valor -> CADENA .)
    INTERROGACION   reduce using rule 67 (valor -> CADENA .)
    OR              reduce using rule 67 (valor -> CADENA .)
    PUNTOCOMA       reduce using rule 67 (valor -> CADENA .)
    PARDER          reduce using rule 67 (valor -> CADENA .)
    COMA            reduce using rule 67 (valor -> CADENA .)
    DOSPUNTOS       reduce using rule 67 (valor -> CADENA .)


state 50

    (68) valor -> DECIMAL .

    POR             reduce using rule 68 (valor -> DECIMAL .)
    DIVIDIDO        reduce using rule 68 (valor -> DECIMAL .)
    MODULO          reduce using rule 68 (valor -> DECIMAL .)
    EQUIVALENTE     reduce using rule 68 (valor -> DECIMAL .)
    DISTINTO        reduce using rule 68 (valor -> DECIMAL .)
    MAS             reduce using rule 68 (valor -> DECIMAL .)
    MENOS           reduce using rule 68 (valor -> DECIMAL .)
    MAYOR           reduce using rule 68 (valor -> DECIMAL .)
    MENOR           reduce using rule 68 (valor -> DECIMAL .)
    MAYORIGUAL      reduce using rule 68 (valor -> DECIMAL .)
    MENORIGUAL      reduce using rule 68 (valor -> DECIMAL .)
    AND             reduce using rule 68 (valor -> DECIMAL .)
    INTERROGACION   reduce using rule 68 (valor -> DECIMAL .)
    OR              reduce using rule 68 (valor -> DECIMAL .)
    PUNTOCOMA       reduce using rule 68 (valor -> DECIMAL .)
    PARDER          reduce using rule 68 (valor -> DECIMAL .)
    COMA            reduce using rule 68 (valor -> DECIMAL .)
    DOSPUNTOS       reduce using rule 68 (valor -> DECIMAL .)


state 51

    (69) valor -> CARACTER .

    POR             reduce using rule 69 (valor -> CARACTER .)
    DIVIDIDO        reduce using rule 69 (valor -> CARACTER .)
    MODULO          reduce using rule 69 (valor -> CARACTER .)
    EQUIVALENTE     reduce using rule 69 (valor -> CARACTER .)
    DISTINTO        reduce using rule 69 (valor -> CARACTER .)
    MAS             reduce using rule 69 (valor -> CARACTER .)
    MENOS           reduce using rule 69 (valor -> CARACTER .)
    MAYOR           reduce using rule 69 (valor -> CARACTER .)
    MENOR           reduce using rule 69 (valor -> CARACTER .)
    MAYORIGUAL      reduce using rule 69 (valor -> CARACTER .)
    MENORIGUAL      reduce using rule 69 (valor -> CARACTER .)
    AND             reduce using rule 69 (valor -> CARACTER .)
    INTERROGACION   reduce using rule 69 (valor -> CARACTER .)
    OR              reduce using rule 69 (valor -> CARACTER .)
    PUNTOCOMA       reduce using rule 69 (valor -> CARACTER .)
    PARDER          reduce using rule 69 (valor -> CARACTER .)
    COMA            reduce using rule 69 (valor -> CARACTER .)
    DOSPUNTOS       reduce using rule 69 (valor -> CARACTER .)


state 52

    (70) valor -> TRUE .

    POR             reduce using rule 70 (valor -> TRUE .)
    DIVIDIDO        reduce using rule 70 (valor -> TRUE .)
    MODULO          reduce using rule 70 (valor -> TRUE .)
    EQUIVALENTE     reduce using rule 70 (valor -> TRUE .)
    DISTINTO        reduce using rule 70 (valor -> TRUE .)
    MAS             reduce using rule 70 (valor -> TRUE .)
    MENOS           reduce using rule 70 (valor -> TRUE .)
    MAYOR           reduce using rule 70 (valor -> TRUE .)
    MENOR           reduce using rule 70 (valor -> TRUE .)
    MAYORIGUAL      reduce using rule 70 (valor -> TRUE .)
    MENORIGUAL      reduce using rule 70 (valor -> TRUE .)
    AND             reduce using rule 70 (valor -> TRUE .)
    INTERROGACION   reduce using rule 70 (valor -> TRUE .)
    OR              reduce using rule 70 (valor -> TRUE .)
    PUNTOCOMA       reduce using rule 70 (valor -> TRUE .)
    PARDER          reduce using rule 70 (valor -> TRUE .)
    COMA            reduce using rule 70 (valor -> TRUE .)
    DOSPUNTOS       reduce using rule 70 (valor -> TRUE .)


state 53

    (71) valor -> FALSE .

    POR             reduce using rule 71 (valor -> FALSE .)
    DIVIDIDO        reduce using rule 71 (valor -> FALSE .)
    MODULO          reduce using rule 71 (valor -> FALSE .)
    EQUIVALENTE     reduce using rule 71 (valor -> FALSE .)
    DISTINTO        reduce using rule 71 (valor -> FALSE .)
    MAS             reduce using rule 71 (valor -> FALSE .)
    MENOS           reduce using rule 71 (valor -> FALSE .)
    MAYOR           reduce using rule 71 (valor -> FALSE .)
    MENOR           reduce using rule 71 (valor -> FALSE .)
    MAYORIGUAL      reduce using rule 71 (valor -> FALSE .)
    MENORIGUAL      reduce using rule 71 (valor -> FALSE .)
    AND             reduce using rule 71 (valor -> FALSE .)
    INTERROGACION   reduce using rule 71 (valor -> FALSE .)
    OR              reduce using rule 71 (valor -> FALSE .)
    PUNTOCOMA       reduce using rule 71 (valor -> FALSE .)
    PARDER          reduce using rule 71 (valor -> FALSE .)
    COMA            reduce using rule 71 (valor -> FALSE .)
    DOSPUNTOS       reduce using rule 71 (valor -> FALSE .)


state 54

    (72) valor -> NULL .

    POR             reduce using rule 72 (valor -> NULL .)
    DIVIDIDO        reduce using rule 72 (valor -> NULL .)
    MODULO          reduce using rule 72 (valor -> NULL .)
    EQUIVALENTE     reduce using rule 72 (valor -> NULL .)
    DISTINTO        reduce using rule 72 (valor -> NULL .)
    MAS             reduce using rule 72 (valor -> NULL .)
    MENOS           reduce using rule 72 (valor -> NULL .)
    MAYOR           reduce using rule 72 (valor -> NULL .)
    MENOR           reduce using rule 72 (valor -> NULL .)
    MAYORIGUAL      reduce using rule 72 (valor -> NULL .)
    MENORIGUAL      reduce using rule 72 (valor -> NULL .)
    AND             reduce using rule 72 (valor -> NULL .)
    INTERROGACION   reduce using rule 72 (valor -> NULL .)
    OR              reduce using rule 72 (valor -> NULL .)
    PUNTOCOMA       reduce using rule 72 (valor -> NULL .)
    PARDER          reduce using rule 72 (valor -> NULL .)
    COMA            reduce using rule 72 (valor -> NULL .)
    DOSPUNTOS       reduce using rule 72 (valor -> NULL .)


state 55

    (20) asignacion -> ID MAS MAS .

    PUNTOCOMA       reduce using rule 20 (asignacion -> ID MAS MAS .)
    PARDER          reduce using rule 20 (asignacion -> ID MAS MAS .)


state 56

    (18) asignacion -> ID MAS IGUAL . op_Ternario
    (37) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (38) op_Ternario -> . exp_Or
    (39) exp_Or -> . exp_Or OR exp_And
    (40) exp_Or -> . exp_And
    (41) exp_And -> . exp_And AND exp_Not
    (42) exp_And -> . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    op_Ternario                    shift and go to state 88
    exp_Or                         shift and go to state 34
    exp_And                        shift and go to state 35
    exp_Not                        shift and go to state 36
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 57

    (21) asignacion -> ID MENOS MENOS .

    PUNTOCOMA       reduce using rule 21 (asignacion -> ID MENOS MENOS .)
    PARDER          reduce using rule 21 (asignacion -> ID MENOS MENOS .)


state 58

    (19) asignacion -> ID MENOS IGUAL . op_Ternario
    (37) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (38) op_Ternario -> . exp_Or
    (39) exp_Or -> . exp_Or OR exp_And
    (40) exp_Or -> . exp_And
    (41) exp_And -> . exp_And AND exp_Not
    (42) exp_And -> . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    op_Ternario                    shift and go to state 89
    exp_Or                         shift and go to state 34
    exp_And                        shift and go to state 35
    exp_Not                        shift and go to state 36
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 59

    (12) sIf -> IF PARIZQ op_Ternario . PARDER LLAVIZQ instrucciones sIf2

    PARDER          shift and go to state 90


state 60

    (11) sWhile -> WHILE PARIZQ op_Ternario . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 91


state 61

    (10) sFor -> FOR PARIZQ declaracion . op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (37) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (38) op_Ternario -> . exp_Or
    (39) exp_Or -> . exp_Or OR exp_And
    (40) exp_Or -> . exp_And
    (41) exp_And -> . exp_And AND exp_Not
    (42) exp_And -> . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    op_Ternario                    shift and go to state 92
    exp_Or                         shift and go to state 34
    exp_And                        shift and go to state 35
    exp_Not                        shift and go to state 36
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 62

    (34) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ . lista_exp PARDER PUNTOCOMA
    (35) lista_exp -> . lista_exp COMA op_Ternario
    (36) lista_exp -> . op_Ternario
    (37) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (38) op_Ternario -> . exp_Or
    (39) exp_Or -> . exp_Or OR exp_And
    (40) exp_Or -> . exp_And
    (41) exp_And -> . exp_And AND exp_Not
    (42) exp_And -> . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    lista_exp                      shift and go to state 93
    op_Ternario                    shift and go to state 94
    exp_Or                         shift and go to state 34
    exp_And                        shift and go to state 35
    exp_Not                        shift and go to state 36
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 63

    (22) declaracion -> tipoVar ID DOSPUNTOS tipo . declaracion_explicita
    (24) declaracion_explicita -> . PUNTOCOMA
    (25) declaracion_explicita -> . IGUAL op_Ternario PUNTOCOMA

    PUNTOCOMA       shift and go to state 96
    IGUAL           shift and go to state 97

    declaracion_explicita          shift and go to state 95

state 64

    (29) tipo -> NUMBER .

    PUNTOCOMA       reduce using rule 29 (tipo -> NUMBER .)
    IGUAL           reduce using rule 29 (tipo -> NUMBER .)


state 65

    (30) tipo -> FLOAT .

    PUNTOCOMA       reduce using rule 30 (tipo -> FLOAT .)
    IGUAL           reduce using rule 30 (tipo -> FLOAT .)


state 66

    (31) tipo -> STRING .

    PUNTOCOMA       reduce using rule 31 (tipo -> STRING .)
    IGUAL           reduce using rule 31 (tipo -> STRING .)


state 67

    (32) tipo -> BOOLEAN .

    PUNTOCOMA       reduce using rule 32 (tipo -> BOOLEAN .)
    IGUAL           reduce using rule 32 (tipo -> BOOLEAN .)


state 68

    (33) tipo -> CHAR .

    PUNTOCOMA       reduce using rule 33 (tipo -> CHAR .)
    IGUAL           reduce using rule 33 (tipo -> CHAR .)


state 69

    (26) declaracion_implicita -> IGUAL op_Ternario . PUNTOCOMA

    PUNTOCOMA       shift and go to state 98


state 70

    (37) op_Ternario -> exp_Or INTERROGACION . exp_Or DOSPUNTOS exp_Or
    (39) exp_Or -> . exp_Or OR exp_And
    (40) exp_Or -> . exp_And
    (41) exp_And -> . exp_And AND exp_Not
    (42) exp_And -> . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Or                         shift and go to state 99
    exp_And                        shift and go to state 35
    exp_Not                        shift and go to state 36
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 71

    (39) exp_Or -> exp_Or OR . exp_And
    (41) exp_And -> . exp_And AND exp_Not
    (42) exp_And -> . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_And                        shift and go to state 100
    exp_Not                        shift and go to state 36
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 72

    (41) exp_And -> exp_And AND . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Not                        shift and go to state 101
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 73

    (43) exp_Not -> lNot exp_Comp .

    AND             reduce using rule 43 (exp_Not -> lNot exp_Comp .)
    INTERROGACION   reduce using rule 43 (exp_Not -> lNot exp_Comp .)
    OR              reduce using rule 43 (exp_Not -> lNot exp_Comp .)
    PUNTOCOMA       reduce using rule 43 (exp_Not -> lNot exp_Comp .)
    PARDER          reduce using rule 43 (exp_Not -> lNot exp_Comp .)
    COMA            reduce using rule 43 (exp_Not -> lNot exp_Comp .)
    DOSPUNTOS       reduce using rule 43 (exp_Not -> lNot exp_Comp .)


state 74

    (45) lNot -> lNot NOT .

    NOT             reduce using rule 45 (lNot -> lNot NOT .)
    PARIZQ          reduce using rule 45 (lNot -> lNot NOT .)
    MENOS           reduce using rule 45 (lNot -> lNot NOT .)
    ENTERO          reduce using rule 45 (lNot -> lNot NOT .)
    CADENA          reduce using rule 45 (lNot -> lNot NOT .)
    DECIMAL         reduce using rule 45 (lNot -> lNot NOT .)
    CARACTER        reduce using rule 45 (lNot -> lNot NOT .)
    TRUE            reduce using rule 45 (lNot -> lNot NOT .)
    FALSE           reduce using rule 45 (lNot -> lNot NOT .)
    NULL            reduce using rule 45 (lNot -> lNot NOT .)
    ID              reduce using rule 45 (lNot -> lNot NOT .)


state 75

    (47) exp_Comp -> exp_Sum_Menos EQUIVALENTE . exp_Sum_Menos
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Sum_Menos                  shift and go to state 102
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 76

    (48) exp_Comp -> exp_Sum_Menos DISTINTO . exp_Sum_Menos
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Sum_Menos                  shift and go to state 103
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 77

    (55) exp_Sum_Menos -> exp_Sum_Menos MAS . exp_Mul_Div
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Mul_Div                    shift and go to state 104
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 78

    (56) exp_Sum_Menos -> exp_Sum_Menos MENOS . exp_Mul_Div
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Mul_Div                    shift and go to state 105
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 79

    (50) exp_rel -> exp_Sum_Menos MAYOR . exp_Sum_Menos
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Sum_Menos                  shift and go to state 106
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 80

    (51) exp_rel -> exp_Sum_Menos MENOR . exp_Sum_Menos
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Sum_Menos                  shift and go to state 107
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 81

    (52) exp_rel -> exp_Sum_Menos MAYORIGUAL . exp_Sum_Menos
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Sum_Menos                  shift and go to state 108
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 82

    (53) exp_rel -> exp_Sum_Menos MENORIGUAL . exp_Sum_Menos
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Sum_Menos                  shift and go to state 109
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 83

    (58) exp_Mul_Div -> exp_Mul_Div POR . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Parentesis                 shift and go to state 110
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 84

    (59) exp_Mul_Div -> exp_Mul_Div DIVIDIDO . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Parentesis                 shift and go to state 111
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 85

    (60) exp_Mul_Div -> exp_Mul_Div MODULO . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Parentesis                 shift and go to state 112
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 86

    (64) exp_Negativo -> MENOS valor .

    POR             reduce using rule 64 (exp_Negativo -> MENOS valor .)
    DIVIDIDO        reduce using rule 64 (exp_Negativo -> MENOS valor .)
    MODULO          reduce using rule 64 (exp_Negativo -> MENOS valor .)
    EQUIVALENTE     reduce using rule 64 (exp_Negativo -> MENOS valor .)
    DISTINTO        reduce using rule 64 (exp_Negativo -> MENOS valor .)
    MAS             reduce using rule 64 (exp_Negativo -> MENOS valor .)
    MENOS           reduce using rule 64 (exp_Negativo -> MENOS valor .)
    MAYOR           reduce using rule 64 (exp_Negativo -> MENOS valor .)
    MENOR           reduce using rule 64 (exp_Negativo -> MENOS valor .)
    MAYORIGUAL      reduce using rule 64 (exp_Negativo -> MENOS valor .)
    MENORIGUAL      reduce using rule 64 (exp_Negativo -> MENOS valor .)
    AND             reduce using rule 64 (exp_Negativo -> MENOS valor .)
    INTERROGACION   reduce using rule 64 (exp_Negativo -> MENOS valor .)
    OR              reduce using rule 64 (exp_Negativo -> MENOS valor .)
    PUNTOCOMA       reduce using rule 64 (exp_Negativo -> MENOS valor .)
    PARDER          reduce using rule 64 (exp_Negativo -> MENOS valor .)
    COMA            reduce using rule 64 (exp_Negativo -> MENOS valor .)
    DOSPUNTOS       reduce using rule 64 (exp_Negativo -> MENOS valor .)


state 87

    (62) exp_Parentesis -> PARIZQ exp_Or . PARDER
    (39) exp_Or -> exp_Or . OR exp_And

    PARDER          shift and go to state 113
    OR              shift and go to state 71


state 88

    (18) asignacion -> ID MAS IGUAL op_Ternario .

    PUNTOCOMA       reduce using rule 18 (asignacion -> ID MAS IGUAL op_Ternario .)
    PARDER          reduce using rule 18 (asignacion -> ID MAS IGUAL op_Ternario .)


state 89

    (19) asignacion -> ID MENOS IGUAL op_Ternario .

    PUNTOCOMA       reduce using rule 19 (asignacion -> ID MENOS IGUAL op_Ternario .)
    PARDER          reduce using rule 19 (asignacion -> ID MENOS IGUAL op_Ternario .)


state 90

    (12) sIf -> IF PARIZQ op_Ternario PARDER . LLAVIZQ instrucciones sIf2

    LLAVIZQ         shift and go to state 114


state 91

    (11) sWhile -> WHILE PARIZQ op_Ternario PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 115


state 92

    (10) sFor -> FOR PARIZQ declaracion op_Ternario . PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER

    PUNTOCOMA       shift and go to state 116


state 93

    (34) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp . PARDER PUNTOCOMA
    (35) lista_exp -> lista_exp . COMA op_Ternario

    PARDER          shift and go to state 117
    COMA            shift and go to state 118


state 94

    (36) lista_exp -> op_Ternario .

    PARDER          reduce using rule 36 (lista_exp -> op_Ternario .)
    COMA            reduce using rule 36 (lista_exp -> op_Ternario .)


state 95

    (22) declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .

    CONSOLE         reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    ID              reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    IF              reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    WHILE           reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    FOR             reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    VAR             reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    CONST           reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    $end            reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    NOT             reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    PARIZQ          reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    MENOS           reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    ENTERO          reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    CADENA          reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    DECIMAL         reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    CARACTER        reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    TRUE            reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    FALSE           reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    NULL            reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)
    LLAVDER         reduce using rule 22 (declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita .)


state 96

    (24) declaracion_explicita -> PUNTOCOMA .

    CONSOLE         reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    ID              reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    IF              reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    WHILE           reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    FOR             reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    VAR             reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    CONST           reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    $end            reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    NOT             reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    PARIZQ          reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    MENOS           reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    ENTERO          reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    CADENA          reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    DECIMAL         reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    CARACTER        reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    TRUE            reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    FALSE           reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    NULL            reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)
    LLAVDER         reduce using rule 24 (declaracion_explicita -> PUNTOCOMA .)


state 97

    (25) declaracion_explicita -> IGUAL . op_Ternario PUNTOCOMA
    (37) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (38) op_Ternario -> . exp_Or
    (39) exp_Or -> . exp_Or OR exp_And
    (40) exp_Or -> . exp_And
    (41) exp_And -> . exp_And AND exp_Not
    (42) exp_And -> . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    op_Ternario                    shift and go to state 119
    exp_Or                         shift and go to state 34
    exp_And                        shift and go to state 35
    exp_Not                        shift and go to state 36
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 98

    (26) declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .

    CONSOLE         reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    ID              reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    IF              reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    WHILE           reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    FOR             reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    VAR             reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    CONST           reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    $end            reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    NOT             reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    PARIZQ          reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    MENOS           reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    ENTERO          reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    CADENA          reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    DECIMAL         reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    CARACTER        reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    TRUE            reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    FALSE           reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    NULL            reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)
    LLAVDER         reduce using rule 26 (declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA .)


state 99

    (37) op_Ternario -> exp_Or INTERROGACION exp_Or . DOSPUNTOS exp_Or
    (39) exp_Or -> exp_Or . OR exp_And

    DOSPUNTOS       shift and go to state 120
    OR              shift and go to state 71


state 100

    (39) exp_Or -> exp_Or OR exp_And .
    (41) exp_And -> exp_And . AND exp_Not

    INTERROGACION   reduce using rule 39 (exp_Or -> exp_Or OR exp_And .)
    OR              reduce using rule 39 (exp_Or -> exp_Or OR exp_And .)
    PUNTOCOMA       reduce using rule 39 (exp_Or -> exp_Or OR exp_And .)
    PARDER          reduce using rule 39 (exp_Or -> exp_Or OR exp_And .)
    COMA            reduce using rule 39 (exp_Or -> exp_Or OR exp_And .)
    DOSPUNTOS       reduce using rule 39 (exp_Or -> exp_Or OR exp_And .)
    AND             shift and go to state 72


state 101

    (41) exp_And -> exp_And AND exp_Not .

    AND             reduce using rule 41 (exp_And -> exp_And AND exp_Not .)
    INTERROGACION   reduce using rule 41 (exp_And -> exp_And AND exp_Not .)
    OR              reduce using rule 41 (exp_And -> exp_And AND exp_Not .)
    PUNTOCOMA       reduce using rule 41 (exp_And -> exp_And AND exp_Not .)
    PARDER          reduce using rule 41 (exp_And -> exp_And AND exp_Not .)
    COMA            reduce using rule 41 (exp_And -> exp_And AND exp_Not .)
    DOSPUNTOS       reduce using rule 41 (exp_And -> exp_And AND exp_Not .)


state 102

    (47) exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .
    (55) exp_Sum_Menos -> exp_Sum_Menos . MAS exp_Mul_Div
    (56) exp_Sum_Menos -> exp_Sum_Menos . MENOS exp_Mul_Div

    AND             reduce using rule 47 (exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .)
    INTERROGACION   reduce using rule 47 (exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .)
    OR              reduce using rule 47 (exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .)
    PUNTOCOMA       reduce using rule 47 (exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .)
    PARDER          reduce using rule 47 (exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .)
    COMA            reduce using rule 47 (exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .)
    DOSPUNTOS       reduce using rule 47 (exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos .)
    MAS             shift and go to state 77
    MENOS           shift and go to state 78


state 103

    (48) exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .
    (55) exp_Sum_Menos -> exp_Sum_Menos . MAS exp_Mul_Div
    (56) exp_Sum_Menos -> exp_Sum_Menos . MENOS exp_Mul_Div

    AND             reduce using rule 48 (exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .)
    INTERROGACION   reduce using rule 48 (exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .)
    OR              reduce using rule 48 (exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .)
    PUNTOCOMA       reduce using rule 48 (exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .)
    PARDER          reduce using rule 48 (exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .)
    COMA            reduce using rule 48 (exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .)
    DOSPUNTOS       reduce using rule 48 (exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos .)
    MAS             shift and go to state 77
    MENOS           shift and go to state 78


state 104

    (55) exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .
    (58) exp_Mul_Div -> exp_Mul_Div . POR exp_Parentesis
    (59) exp_Mul_Div -> exp_Mul_Div . DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> exp_Mul_Div . MODULO exp_Parentesis

    EQUIVALENTE     reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    DISTINTO        reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    MAS             reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    MENOS           reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    MAYOR           reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    MENOR           reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    MAYORIGUAL      reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    MENORIGUAL      reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    AND             reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    INTERROGACION   reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    OR              reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    PUNTOCOMA       reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    PARDER          reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    COMA            reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    DOSPUNTOS       reduce using rule 55 (exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div .)
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    MODULO          shift and go to state 85


state 105

    (56) exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .
    (58) exp_Mul_Div -> exp_Mul_Div . POR exp_Parentesis
    (59) exp_Mul_Div -> exp_Mul_Div . DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> exp_Mul_Div . MODULO exp_Parentesis

    EQUIVALENTE     reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    DISTINTO        reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    MAS             reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    MENOS           reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    MAYOR           reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    MENOR           reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    MAYORIGUAL      reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    MENORIGUAL      reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    AND             reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    INTERROGACION   reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    OR              reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    PUNTOCOMA       reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    PARDER          reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    COMA            reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    DOSPUNTOS       reduce using rule 56 (exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div .)
    POR             shift and go to state 83
    DIVIDIDO        shift and go to state 84
    MODULO          shift and go to state 85


state 106

    (50) exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .
    (55) exp_Sum_Menos -> exp_Sum_Menos . MAS exp_Mul_Div
    (56) exp_Sum_Menos -> exp_Sum_Menos . MENOS exp_Mul_Div

    AND             reduce using rule 50 (exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .)
    INTERROGACION   reduce using rule 50 (exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .)
    OR              reduce using rule 50 (exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .)
    PUNTOCOMA       reduce using rule 50 (exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .)
    PARDER          reduce using rule 50 (exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .)
    COMA            reduce using rule 50 (exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .)
    DOSPUNTOS       reduce using rule 50 (exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos .)
    MAS             shift and go to state 77
    MENOS           shift and go to state 78


state 107

    (51) exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .
    (55) exp_Sum_Menos -> exp_Sum_Menos . MAS exp_Mul_Div
    (56) exp_Sum_Menos -> exp_Sum_Menos . MENOS exp_Mul_Div

    AND             reduce using rule 51 (exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .)
    INTERROGACION   reduce using rule 51 (exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .)
    OR              reduce using rule 51 (exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .)
    PUNTOCOMA       reduce using rule 51 (exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .)
    PARDER          reduce using rule 51 (exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .)
    COMA            reduce using rule 51 (exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .)
    DOSPUNTOS       reduce using rule 51 (exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos .)
    MAS             shift and go to state 77
    MENOS           shift and go to state 78


state 108

    (52) exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .
    (55) exp_Sum_Menos -> exp_Sum_Menos . MAS exp_Mul_Div
    (56) exp_Sum_Menos -> exp_Sum_Menos . MENOS exp_Mul_Div

    AND             reduce using rule 52 (exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .)
    INTERROGACION   reduce using rule 52 (exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .)
    OR              reduce using rule 52 (exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .)
    PUNTOCOMA       reduce using rule 52 (exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .)
    PARDER          reduce using rule 52 (exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .)
    COMA            reduce using rule 52 (exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .)
    DOSPUNTOS       reduce using rule 52 (exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos .)
    MAS             shift and go to state 77
    MENOS           shift and go to state 78


state 109

    (53) exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .
    (55) exp_Sum_Menos -> exp_Sum_Menos . MAS exp_Mul_Div
    (56) exp_Sum_Menos -> exp_Sum_Menos . MENOS exp_Mul_Div

    AND             reduce using rule 53 (exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .)
    INTERROGACION   reduce using rule 53 (exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .)
    OR              reduce using rule 53 (exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .)
    PUNTOCOMA       reduce using rule 53 (exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .)
    PARDER          reduce using rule 53 (exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .)
    COMA            reduce using rule 53 (exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .)
    DOSPUNTOS       reduce using rule 53 (exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos .)
    MAS             shift and go to state 77
    MENOS           shift and go to state 78


state 110

    (58) exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .

    POR             reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    DIVIDIDO        reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    MODULO          reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    EQUIVALENTE     reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    DISTINTO        reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    MAS             reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    MENOS           reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    MAYOR           reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    MENOR           reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    MAYORIGUAL      reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    MENORIGUAL      reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    AND             reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    INTERROGACION   reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    OR              reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    PUNTOCOMA       reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    PARDER          reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    COMA            reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)
    DOSPUNTOS       reduce using rule 58 (exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis .)


state 111

    (59) exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .

    POR             reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    DIVIDIDO        reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    MODULO          reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    EQUIVALENTE     reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    DISTINTO        reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    MAS             reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    MENOS           reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    MAYOR           reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    MENOR           reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    MAYORIGUAL      reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    MENORIGUAL      reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    AND             reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    INTERROGACION   reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    OR              reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    PUNTOCOMA       reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    PARDER          reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    COMA            reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)
    DOSPUNTOS       reduce using rule 59 (exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis .)


state 112

    (60) exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .

    POR             reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    DIVIDIDO        reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    MODULO          reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    EQUIVALENTE     reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    DISTINTO        reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    MAS             reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    MENOS           reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    MAYOR           reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    MENOR           reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    MAYORIGUAL      reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    MENORIGUAL      reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    AND             reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    INTERROGACION   reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    OR              reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    PUNTOCOMA       reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    PARDER          reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    COMA            reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)
    DOSPUNTOS       reduce using rule 60 (exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis .)


state 113

    (62) exp_Parentesis -> PARIZQ exp_Or PARDER .

    POR             reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    DIVIDIDO        reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    MODULO          reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    EQUIVALENTE     reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    DISTINTO        reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    MAS             reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    MENOS           reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    MAYOR           reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    MENOR           reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    MAYORIGUAL      reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    MENORIGUAL      reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    AND             reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    INTERROGACION   reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    OR              reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    PUNTOCOMA       reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    PARDER          reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    COMA            reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)
    DOSPUNTOS       reduce using rule 62 (exp_Parentesis -> PARIZQ exp_Or PARDER .)


state 114

    (12) sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ . instrucciones sIf2
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . sIf
    (8) instruccion -> . sWhile
    (9) instruccion -> . sFor
    (34) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (22) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (23) declaracion -> . tipoVar ID declaracion_implicita
    (17) asignacion -> . ID IGUAL op_Ternario
    (18) asignacion -> . ID MAS IGUAL op_Ternario
    (19) asignacion -> . ID MENOS IGUAL op_Ternario
    (20) asignacion -> . ID MAS MAS
    (21) asignacion -> . ID MENOS MENOS
    (12) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (11) sWhile -> . WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER
    (10) sFor -> . FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (27) tipoVar -> . VAR
    (28) tipoVar -> . CONST

    CONSOLE         shift and go to state 10
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    VAR             shift and go to state 16
    CONST           shift and go to state 17

    instrucciones                  shift and go to state 121
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    sIf                            shift and go to state 7
    sWhile                         shift and go to state 8
    sFor                           shift and go to state 9
    tipoVar                        shift and go to state 11

state 115

    (11) sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . sIf
    (8) instruccion -> . sWhile
    (9) instruccion -> . sFor
    (34) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (22) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (23) declaracion -> . tipoVar ID declaracion_implicita
    (17) asignacion -> . ID IGUAL op_Ternario
    (18) asignacion -> . ID MAS IGUAL op_Ternario
    (19) asignacion -> . ID MENOS IGUAL op_Ternario
    (20) asignacion -> . ID MAS MAS
    (21) asignacion -> . ID MENOS MENOS
    (12) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (11) sWhile -> . WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER
    (10) sFor -> . FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (27) tipoVar -> . VAR
    (28) tipoVar -> . CONST

    CONSOLE         shift and go to state 10
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    VAR             shift and go to state 16
    CONST           shift and go to state 17

    instrucciones                  shift and go to state 122
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    sIf                            shift and go to state 7
    sWhile                         shift and go to state 8
    sFor                           shift and go to state 9
    tipoVar                        shift and go to state 11

state 116

    (10) sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA . asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (17) asignacion -> . ID IGUAL op_Ternario
    (18) asignacion -> . ID MAS IGUAL op_Ternario
    (19) asignacion -> . ID MENOS IGUAL op_Ternario
    (20) asignacion -> . ID MAS MAS
    (21) asignacion -> . ID MENOS MENOS

    ID              shift and go to state 12

    asignacion                     shift and go to state 123

state 117

    (34) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 124


state 118

    (35) lista_exp -> lista_exp COMA . op_Ternario
    (37) op_Ternario -> . exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or
    (38) op_Ternario -> . exp_Or
    (39) exp_Or -> . exp_Or OR exp_And
    (40) exp_Or -> . exp_And
    (41) exp_And -> . exp_And AND exp_Not
    (42) exp_And -> . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    op_Ternario                    shift and go to state 125
    exp_Or                         shift and go to state 34
    exp_And                        shift and go to state 35
    exp_Not                        shift and go to state 36
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 119

    (25) declaracion_explicita -> IGUAL op_Ternario . PUNTOCOMA

    PUNTOCOMA       shift and go to state 126


state 120

    (37) op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS . exp_Or
    (39) exp_Or -> . exp_Or OR exp_And
    (40) exp_Or -> . exp_And
    (41) exp_And -> . exp_And AND exp_Not
    (42) exp_And -> . exp_Not
    (43) exp_Not -> . lNot exp_Comp
    (44) exp_Not -> . exp_Comp
    (45) lNot -> . lNot NOT
    (46) lNot -> . NOT
    (47) exp_Comp -> . exp_Sum_Menos EQUIVALENTE exp_Sum_Menos
    (48) exp_Comp -> . exp_Sum_Menos DISTINTO exp_Sum_Menos
    (49) exp_Comp -> . exp_rel
    (55) exp_Sum_Menos -> . exp_Sum_Menos MAS exp_Mul_Div
    (56) exp_Sum_Menos -> . exp_Sum_Menos MENOS exp_Mul_Div
    (57) exp_Sum_Menos -> . exp_Mul_Div
    (50) exp_rel -> . exp_Sum_Menos MAYOR exp_Sum_Menos
    (51) exp_rel -> . exp_Sum_Menos MENOR exp_Sum_Menos
    (52) exp_rel -> . exp_Sum_Menos MAYORIGUAL exp_Sum_Menos
    (53) exp_rel -> . exp_Sum_Menos MENORIGUAL exp_Sum_Menos
    (54) exp_rel -> . exp_Sum_Menos
    (58) exp_Mul_Div -> . exp_Mul_Div POR exp_Parentesis
    (59) exp_Mul_Div -> . exp_Mul_Div DIVIDIDO exp_Parentesis
    (60) exp_Mul_Div -> . exp_Mul_Div MODULO exp_Parentesis
    (61) exp_Mul_Div -> . exp_Parentesis
    (62) exp_Parentesis -> . PARIZQ exp_Or PARDER
    (63) exp_Parentesis -> . exp_Negativo
    (64) exp_Negativo -> . MENOS valor
    (65) exp_Negativo -> . valor
    (66) valor -> . ENTERO
    (67) valor -> . CADENA
    (68) valor -> . DECIMAL
    (69) valor -> . CARACTER
    (70) valor -> . TRUE
    (71) valor -> . FALSE
    (72) valor -> . NULL
    (73) valor -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 45
    MENOS           shift and go to state 43
    ENTERO          shift and go to state 48
    CADENA          shift and go to state 49
    DECIMAL         shift and go to state 50
    CARACTER        shift and go to state 51
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    NULL            shift and go to state 54
    ID              shift and go to state 32

    exp_Or                         shift and go to state 127
    exp_And                        shift and go to state 35
    exp_Not                        shift and go to state 36
    lNot                           shift and go to state 37
    exp_Comp                       shift and go to state 38
    exp_Sum_Menos                  shift and go to state 40
    exp_rel                        shift and go to state 41
    exp_Mul_Div                    shift and go to state 42
    exp_Parentesis                 shift and go to state 44
    exp_Negativo                   shift and go to state 46
    valor                          shift and go to state 47

state 121

    (12) sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones . sIf2
    (2) instrucciones -> instrucciones . instruccion
    (13) sIf2 -> . LLAVDER ELSE sElse
    (14) sIf2 -> . LLAVDER
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . sIf
    (8) instruccion -> . sWhile
    (9) instruccion -> . sFor
    (34) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (22) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (23) declaracion -> . tipoVar ID declaracion_implicita
    (17) asignacion -> . ID IGUAL op_Ternario
    (18) asignacion -> . ID MAS IGUAL op_Ternario
    (19) asignacion -> . ID MENOS IGUAL op_Ternario
    (20) asignacion -> . ID MAS MAS
    (21) asignacion -> . ID MENOS MENOS
    (12) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (11) sWhile -> . WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER
    (10) sFor -> . FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (27) tipoVar -> . VAR
    (28) tipoVar -> . CONST

    LLAVDER         shift and go to state 129
    CONSOLE         shift and go to state 10
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    VAR             shift and go to state 16
    CONST           shift and go to state 17

    sIf2                           shift and go to state 128
    instruccion                    shift and go to state 18
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    sIf                            shift and go to state 7
    sWhile                         shift and go to state 8
    sFor                           shift and go to state 9
    tipoVar                        shift and go to state 11

state 122

    (11) sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . sIf
    (8) instruccion -> . sWhile
    (9) instruccion -> . sFor
    (34) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (22) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (23) declaracion -> . tipoVar ID declaracion_implicita
    (17) asignacion -> . ID IGUAL op_Ternario
    (18) asignacion -> . ID MAS IGUAL op_Ternario
    (19) asignacion -> . ID MENOS IGUAL op_Ternario
    (20) asignacion -> . ID MAS MAS
    (21) asignacion -> . ID MENOS MENOS
    (12) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (11) sWhile -> . WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER
    (10) sFor -> . FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (27) tipoVar -> . VAR
    (28) tipoVar -> . CONST

    LLAVDER         shift and go to state 130
    CONSOLE         shift and go to state 10
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    VAR             shift and go to state 16
    CONST           shift and go to state 17

    instruccion                    shift and go to state 18
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    sIf                            shift and go to state 7
    sWhile                         shift and go to state 8
    sFor                           shift and go to state 9
    tipoVar                        shift and go to state 11

state 123

    (10) sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 131


state 124

    (34) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .

    CONSOLE         reduce using rule 34 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)
    ID              reduce using rule 34 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)
    IF              reduce using rule 34 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)
    WHILE           reduce using rule 34 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)
    FOR             reduce using rule 34 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)
    VAR             reduce using rule 34 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)
    CONST           reduce using rule 34 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)
    $end            reduce using rule 34 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)
    LLAVDER         reduce using rule 34 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA .)


state 125

    (35) lista_exp -> lista_exp COMA op_Ternario .

    PARDER          reduce using rule 35 (lista_exp -> lista_exp COMA op_Ternario .)
    COMA            reduce using rule 35 (lista_exp -> lista_exp COMA op_Ternario .)


state 126

    (25) declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .

    CONSOLE         reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    ID              reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    IF              reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    WHILE           reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    FOR             reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    VAR             reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    CONST           reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    $end            reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    NOT             reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    PARIZQ          reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    MENOS           reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    ENTERO          reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    CADENA          reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    DECIMAL         reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    CARACTER        reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    TRUE            reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    FALSE           reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    NULL            reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)
    LLAVDER         reduce using rule 25 (declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA .)


state 127

    (37) op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or .
    (39) exp_Or -> exp_Or . OR exp_And

    PUNTOCOMA       reduce using rule 37 (op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or .)
    PARDER          reduce using rule 37 (op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or .)
    COMA            reduce using rule 37 (op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or .)
    OR              shift and go to state 71


state 128

    (12) sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .

    CONSOLE         reduce using rule 12 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)
    ID              reduce using rule 12 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)
    IF              reduce using rule 12 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)
    WHILE           reduce using rule 12 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)
    FOR             reduce using rule 12 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)
    VAR             reduce using rule 12 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)
    CONST           reduce using rule 12 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)
    $end            reduce using rule 12 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)
    LLAVDER         reduce using rule 12 (sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2 .)


state 129

    (13) sIf2 -> LLAVDER . ELSE sElse
    (14) sIf2 -> LLAVDER .

    ELSE            shift and go to state 132
    CONSOLE         reduce using rule 14 (sIf2 -> LLAVDER .)
    ID              reduce using rule 14 (sIf2 -> LLAVDER .)
    IF              reduce using rule 14 (sIf2 -> LLAVDER .)
    WHILE           reduce using rule 14 (sIf2 -> LLAVDER .)
    FOR             reduce using rule 14 (sIf2 -> LLAVDER .)
    VAR             reduce using rule 14 (sIf2 -> LLAVDER .)
    CONST           reduce using rule 14 (sIf2 -> LLAVDER .)
    $end            reduce using rule 14 (sIf2 -> LLAVDER .)
    LLAVDER         reduce using rule 14 (sIf2 -> LLAVDER .)


state 130

    (11) sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER .

    CONSOLE         reduce using rule 11 (sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 11 (sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 11 (sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 11 (sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 11 (sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 11 (sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER .)
    CONST           reduce using rule 11 (sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 11 (sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 11 (sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER .)


state 131

    (10) sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 133


state 132

    (13) sIf2 -> LLAVDER ELSE . sElse
    (15) sElse -> . LLAVIZQ instrucciones LLAVDER
    (16) sElse -> . sIf
    (12) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2

    LLAVIZQ         shift and go to state 135
    IF              shift and go to state 13

    sElse                          shift and go to state 134
    sIf                            shift and go to state 136

state 133

    (10) sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . sIf
    (8) instruccion -> . sWhile
    (9) instruccion -> . sFor
    (34) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (22) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (23) declaracion -> . tipoVar ID declaracion_implicita
    (17) asignacion -> . ID IGUAL op_Ternario
    (18) asignacion -> . ID MAS IGUAL op_Ternario
    (19) asignacion -> . ID MENOS IGUAL op_Ternario
    (20) asignacion -> . ID MAS MAS
    (21) asignacion -> . ID MENOS MENOS
    (12) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (11) sWhile -> . WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER
    (10) sFor -> . FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (27) tipoVar -> . VAR
    (28) tipoVar -> . CONST

    CONSOLE         shift and go to state 10
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    VAR             shift and go to state 16
    CONST           shift and go to state 17

    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    instrucciones                  shift and go to state 137
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    sIf                            shift and go to state 7
    sWhile                         shift and go to state 8
    sFor                           shift and go to state 9
    tipoVar                        shift and go to state 11

state 134

    (13) sIf2 -> LLAVDER ELSE sElse .

    CONSOLE         reduce using rule 13 (sIf2 -> LLAVDER ELSE sElse .)
    ID              reduce using rule 13 (sIf2 -> LLAVDER ELSE sElse .)
    IF              reduce using rule 13 (sIf2 -> LLAVDER ELSE sElse .)
    WHILE           reduce using rule 13 (sIf2 -> LLAVDER ELSE sElse .)
    FOR             reduce using rule 13 (sIf2 -> LLAVDER ELSE sElse .)
    VAR             reduce using rule 13 (sIf2 -> LLAVDER ELSE sElse .)
    CONST           reduce using rule 13 (sIf2 -> LLAVDER ELSE sElse .)
    $end            reduce using rule 13 (sIf2 -> LLAVDER ELSE sElse .)
    LLAVDER         reduce using rule 13 (sIf2 -> LLAVDER ELSE sElse .)


state 135

    (15) sElse -> LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . sIf
    (8) instruccion -> . sWhile
    (9) instruccion -> . sFor
    (34) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (22) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (23) declaracion -> . tipoVar ID declaracion_implicita
    (17) asignacion -> . ID IGUAL op_Ternario
    (18) asignacion -> . ID MAS IGUAL op_Ternario
    (19) asignacion -> . ID MENOS IGUAL op_Ternario
    (20) asignacion -> . ID MAS MAS
    (21) asignacion -> . ID MENOS MENOS
    (12) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (11) sWhile -> . WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER
    (10) sFor -> . FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (27) tipoVar -> . VAR
    (28) tipoVar -> . CONST

    CONSOLE         shift and go to state 10
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    VAR             shift and go to state 16
    CONST           shift and go to state 17

    instrucciones                  shift and go to state 138
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    sIf                            shift and go to state 7
    sWhile                         shift and go to state 8
    sFor                           shift and go to state 9
    tipoVar                        shift and go to state 11

state 136

    (16) sElse -> sIf .

    CONSOLE         reduce using rule 16 (sElse -> sIf .)
    ID              reduce using rule 16 (sElse -> sIf .)
    IF              reduce using rule 16 (sElse -> sIf .)
    WHILE           reduce using rule 16 (sElse -> sIf .)
    FOR             reduce using rule 16 (sElse -> sIf .)
    VAR             reduce using rule 16 (sElse -> sIf .)
    CONST           reduce using rule 16 (sElse -> sIf .)
    $end            reduce using rule 16 (sElse -> sIf .)
    LLAVDER         reduce using rule 16 (sElse -> sIf .)


state 137

    (10) sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . sIf
    (8) instruccion -> . sWhile
    (9) instruccion -> . sFor
    (34) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (22) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (23) declaracion -> . tipoVar ID declaracion_implicita
    (17) asignacion -> . ID IGUAL op_Ternario
    (18) asignacion -> . ID MAS IGUAL op_Ternario
    (19) asignacion -> . ID MENOS IGUAL op_Ternario
    (20) asignacion -> . ID MAS MAS
    (21) asignacion -> . ID MENOS MENOS
    (12) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (11) sWhile -> . WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER
    (10) sFor -> . FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (27) tipoVar -> . VAR
    (28) tipoVar -> . CONST

    LLAVDER         shift and go to state 139
    CONSOLE         shift and go to state 10
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    VAR             shift and go to state 16
    CONST           shift and go to state 17

    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    instruccion                    shift and go to state 18
    imprimir_instr                 shift and go to state 4
    sIf                            shift and go to state 7
    sWhile                         shift and go to state 8
    sFor                           shift and go to state 9
    tipoVar                        shift and go to state 11

state 138

    (15) sElse -> LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . sIf
    (8) instruccion -> . sWhile
    (9) instruccion -> . sFor
    (34) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA
    (22) declaracion -> . tipoVar ID DOSPUNTOS tipo declaracion_explicita
    (23) declaracion -> . tipoVar ID declaracion_implicita
    (17) asignacion -> . ID IGUAL op_Ternario
    (18) asignacion -> . ID MAS IGUAL op_Ternario
    (19) asignacion -> . ID MENOS IGUAL op_Ternario
    (20) asignacion -> . ID MAS MAS
    (21) asignacion -> . ID MENOS MENOS
    (12) sIf -> . IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2
    (11) sWhile -> . WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER
    (10) sFor -> . FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (27) tipoVar -> . VAR
    (28) tipoVar -> . CONST

    LLAVDER         shift and go to state 140
    CONSOLE         shift and go to state 10
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    VAR             shift and go to state 16
    CONST           shift and go to state 17

    instruccion                    shift and go to state 18
    imprimir_instr                 shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    sIf                            shift and go to state 7
    sWhile                         shift and go to state 8
    sFor                           shift and go to state 9
    tipoVar                        shift and go to state 11

state 139

    (10) sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .

    CONSOLE         reduce using rule 10 (sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 10 (sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 10 (sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 10 (sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 10 (sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 10 (sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONST           reduce using rule 10 (sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 10 (sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 10 (sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)


state 140

    (15) sElse -> LLAVIZQ instrucciones LLAVDER .

    CONSOLE         reduce using rule 15 (sElse -> LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 15 (sElse -> LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 15 (sElse -> LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 15 (sElse -> LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 15 (sElse -> LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 15 (sElse -> LLAVIZQ instrucciones LLAVDER .)
    CONST           reduce using rule 15 (sElse -> LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 15 (sElse -> LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 15 (sElse -> LLAVIZQ instrucciones LLAVDER .)

