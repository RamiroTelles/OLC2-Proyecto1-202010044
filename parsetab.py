
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN BREAK CADENA CARACTER CHAR COMA COMMENTBLOCK CONSOLE CONST CONTINUE DECIMAL DISTINTO DIVIDIDO DOSPUNTOS ELSE ENTERO EQUIVALENTE FALSE FLOAT FOR FUNCTION ID IF IGUAL INTERFACE INTERROGACION LLAVDER LLAVIZQ LOG MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MODULO NOT NULL NUMBER OR PARDER PARIZQ POR PUNTO PUNTOCOMA RETURN STRING TRUE VAR WHILEinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion      : imprimir_instr\n                        | declaracion\n                        | asignacion PUNTOCOMA\n                        | sIf\n                        | sWhile\n                        | sFor\n                        | sContinue\n                        | sBreak\n                        | sReturnsContinue    : CONTINUE PUNTOCOMAsBreak    : BREAK PUNTOCOMAsReturn    : RETURN PUNTOCOMAsReturn    : RETURN op_Ternario PUNTOCOMAsFor : FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDERsWhile   : WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDERsIf  : IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2sIf2  : LLAVDER ELSE sElsesIf2  : LLAVDERsElse    : LLAVIZQ instrucciones LLAVDERsElse    : sIfasignacion   : ID IGUAL op_Ternario\n                    | ID MAS IGUAL op_Ternario\n                    | ID MENOS IGUAL op_Ternarioasignacion   : ID MAS MAS\n                    | ID MENOS MENOSdeclaracion  : tipoVar ID DOSPUNTOS tipo declaracion_explicitadeclaracion  : tipoVar ID declaracion_implicitadeclaracion_explicita    : PUNTOCOMAdeclaracion_explicita    : IGUAL op_Ternario PUNTOCOMAdeclaracion_implicita    : IGUAL op_Ternario PUNTOCOMAtipoVar  : VAR\n                | CONSTtipo : NUMBERtipo : FLOATtipo : STRINGtipo : BOOLEANtipo : CHARimprimir_instr : CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMAlista_exp    : lista_exp COMA op_Ternariolista_exp    : op_Ternarioop_Ternario  : exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Orop_Ternario  : exp_Orexp_Or   : exp_Or OR exp_Andexp_Or   : exp_Andexp_And   : exp_And AND exp_Notexp_And   : exp_Notexp_Not  : lNot exp_Compexp_Not  : exp_ComplNot : lNot NOTlNot : NOTexp_Comp : exp_Sum_Menos EQUIVALENTE exp_Sum_Menos\n                | exp_Sum_Menos DISTINTO exp_Sum_Menosexp_Comp    : exp_relexp_rel  : exp_Sum_Menos MAYOR exp_Sum_Menos\n                | exp_Sum_Menos MENOR exp_Sum_Menos\n                | exp_Sum_Menos MAYORIGUAL exp_Sum_Menos\n                | exp_Sum_Menos MENORIGUAL exp_Sum_Menosexp_rel    : exp_Sum_Menosexp_Sum_Menos    : exp_Sum_Menos MAS exp_Mul_Div\n                        | exp_Sum_Menos MENOS exp_Mul_Divexp_Sum_Menos    : exp_Mul_Divexp_Mul_Div  : exp_Mul_Div POR exp_Parentesis\n                    | exp_Mul_Div DIVIDIDO exp_Parentesis\n                    | exp_Mul_Div MODULO exp_Parentesisexp_Mul_Div    : exp_Parentesisexp_Parentesis   : PARIZQ exp_Or PARDERexp_Parentesis   : exp_Negativoexp_Negativo : MENOS valorexp_Negativo : valorvalor    : ENTEROvalor    : CADENAvalor    : DECIMALvalor    : CARACTERvalor    : TRUE\n                | FALSEvalor    : NULLvalor    : ID'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,7,8,9,10,11,12,24,25,34,35,36,62,72,121,122,124,125,126,132,133,136,138,139,140,141,144,145,146,147,148,149,150,151,],[13,13,-3,-4,-5,-7,-8,-9,-10,-11,-12,-2,-6,-13,-14,-15,-30,-16,-29,-31,-33,13,13,13,13,-41,-32,-19,-21,-18,13,-20,13,-23,13,13,-17,-22,]),'ID':([0,2,3,4,5,7,8,9,10,11,12,14,21,22,23,24,25,28,31,32,34,35,36,41,43,47,49,62,63,66,68,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,91,121,122,123,124,125,126,127,128,130,132,133,136,138,139,140,141,144,145,146,147,148,149,150,151,],[15,15,-3,-4,-5,-7,-8,-9,-10,-11,-12,27,59,-34,-35,-2,-6,59,59,59,-13,-14,-15,59,-53,59,59,-30,59,59,59,59,-16,59,59,59,-52,59,59,59,59,59,59,59,59,59,59,59,59,-29,-31,59,-33,15,15,15,59,59,15,15,-41,-32,-19,-21,-18,15,-20,15,-23,15,15,-17,-22,]),'IF':([0,2,3,4,5,7,8,9,10,11,12,24,25,34,35,36,62,72,121,122,124,125,126,132,133,136,138,139,140,141,143,144,145,146,147,148,149,150,151,],[16,16,-3,-4,-5,-7,-8,-9,-10,-11,-12,-2,-6,-13,-14,-15,-30,-16,-29,-31,-33,16,16,16,16,-41,-32,-19,-21,-18,16,16,-20,16,-23,16,16,-17,-22,]),'WHILE':([0,2,3,4,5,7,8,9,10,11,12,24,25,34,35,36,62,72,121,122,124,125,126,132,133,136,138,139,140,141,144,145,146,147,148,149,150,151,],[17,17,-3,-4,-5,-7,-8,-9,-10,-11,-12,-2,-6,-13,-14,-15,-30,-16,-29,-31,-33,17,17,17,17,-41,-32,-19,-21,-18,17,-20,17,-23,17,17,-17,-22,]),'FOR':([0,2,3,4,5,7,8,9,10,11,12,24,25,34,35,36,62,72,121,122,124,125,126,132,133,136,138,139,140,141,144,145,146,147,148,149,150,151,],[18,18,-3,-4,-5,-7,-8,-9,-10,-11,-12,-2,-6,-13,-14,-15,-30,-16,-29,-31,-33,18,18,18,18,-41,-32,-19,-21,-18,18,-20,18,-23,18,18,-17,-22,]),'CONTINUE':([0,2,3,4,5,7,8,9,10,11,12,24,25,34,35,36,62,72,121,122,124,125,126,132,133,136,138,139,140,141,144,145,146,147,148,149,150,151,],[19,19,-3,-4,-5,-7,-8,-9,-10,-11,-12,-2,-6,-13,-14,-15,-30,-16,-29,-31,-33,19,19,19,19,-41,-32,-19,-21,-18,19,-20,19,-23,19,19,-17,-22,]),'BREAK':([0,2,3,4,5,7,8,9,10,11,12,24,25,34,35,36,62,72,121,122,124,125,126,132,133,136,138,139,140,141,144,145,146,147,148,149,150,151,],[20,20,-3,-4,-5,-7,-8,-9,-10,-11,-12,-2,-6,-13,-14,-15,-30,-16,-29,-31,-33,20,20,20,20,-41,-32,-19,-21,-18,20,-20,20,-23,20,20,-17,-22,]),'RETURN':([0,2,3,4,5,7,8,9,10,11,12,24,25,34,35,36,62,72,121,122,124,125,126,132,133,136,138,139,140,141,144,145,146,147,148,149,150,151,],[21,21,-3,-4,-5,-7,-8,-9,-10,-11,-12,-2,-6,-13,-14,-15,-30,-16,-29,-31,-33,21,21,21,21,-41,-32,-19,-21,-18,21,-20,21,-23,21,21,-17,-22,]),'VAR':([0,2,3,4,5,7,8,9,10,11,12,24,25,33,34,35,36,62,72,121,122,124,125,126,132,133,136,138,139,140,141,144,145,146,147,148,149,150,151,],[22,22,-3,-4,-5,-7,-8,-9,-10,-11,-12,-2,-6,22,-13,-14,-15,-30,-16,-29,-31,-33,22,22,22,22,-41,-32,-19,-21,-18,22,-20,22,-23,22,22,-17,-22,]),'CONST':([0,2,3,4,5,7,8,9,10,11,12,24,25,33,34,35,36,62,72,121,122,124,125,126,132,133,136,138,139,140,141,144,145,146,147,148,149,150,151,],[23,23,-3,-4,-5,-7,-8,-9,-10,-11,-12,-2,-6,23,-13,-14,-15,-30,-16,-29,-31,-33,23,23,23,23,-41,-32,-19,-21,-18,23,-20,23,-23,23,23,-17,-22,]),'$end':([1,2,3,4,5,7,8,9,10,11,12,24,25,34,35,36,62,72,121,122,124,136,138,139,140,141,145,147,150,151,],[0,-1,-3,-4,-5,-7,-8,-9,-10,-11,-12,-2,-6,-13,-14,-15,-30,-16,-29,-31,-33,-41,-32,-19,-21,-18,-20,-23,-17,-22,]),'LLAVDER':([3,4,5,7,8,9,10,11,12,24,25,34,35,36,62,72,121,122,124,132,133,136,138,139,140,141,145,147,148,149,150,151,],[-3,-4,-5,-7,-8,-9,-10,-11,-12,-2,-6,-13,-14,-15,-30,-16,-29,-31,-33,140,141,-41,-32,-19,-21,-18,-20,-23,150,151,-17,-22,]),'PUNTOCOMA':([6,19,20,21,37,38,39,40,42,44,45,46,48,50,51,52,53,54,55,56,57,58,59,64,65,67,76,89,92,93,94,95,96,97,98,99,100,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,129,131,135,],[25,34,35,36,72,-45,-47,-49,-51,-61,-56,-64,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-24,-27,-28,-50,-71,122,-36,-37,-38,-39,-40,124,-25,-26,127,-46,-48,-54,-55,-62,-63,-57,-58,-59,-60,-65,-66,-67,-69,136,138,-44,]),'PUNTO':([13,],[26,]),'IGUAL':([15,27,29,30,92,93,94,95,96,97,],[28,63,66,68,123,-36,-37,-38,-39,-40,]),'MAS':([15,29,44,46,48,50,51,52,53,54,55,56,57,58,59,89,107,108,109,110,111,112,113,114,115,116,117,118,],[29,65,80,-64,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-71,80,80,-62,-63,80,80,80,80,-65,-66,-67,-69,]),'MENOS':([15,21,28,30,31,32,41,43,44,46,48,49,50,51,52,53,54,55,56,57,58,59,62,63,66,68,71,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,91,107,108,109,110,111,112,113,114,115,116,117,118,121,122,123,124,128,130,138,],[30,47,47,67,47,47,47,-53,81,-64,-68,47,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-30,47,47,47,47,47,47,47,-52,47,47,47,47,47,47,47,47,47,47,47,-71,47,81,81,-62,-63,81,81,81,81,-65,-66,-67,-69,-29,-31,47,-33,47,47,-32,]),'PARIZQ':([16,17,18,21,28,31,32,41,43,49,60,62,63,66,68,71,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,91,121,122,123,124,128,130,138,],[31,32,33,49,49,49,49,49,-53,49,91,-30,49,49,49,49,49,49,49,-52,49,49,49,49,49,49,49,49,49,49,49,49,-29,-31,49,-33,49,49,-32,]),'NOT':([21,28,31,32,41,43,49,62,63,66,68,71,73,74,75,77,91,121,122,123,124,128,130,138,],[43,43,43,43,77,-53,43,-30,43,43,43,43,43,43,43,-52,43,-29,-31,43,-33,43,43,-32,]),'ENTERO':([21,28,31,32,41,43,47,49,62,63,66,68,71,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,91,121,122,123,124,128,130,138,],[52,52,52,52,52,-53,52,52,-30,52,52,52,52,52,52,52,-52,52,52,52,52,52,52,52,52,52,52,52,52,-29,-31,52,-33,52,52,-32,]),'CADENA':([21,28,31,32,41,43,47,49,62,63,66,68,71,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,91,121,122,123,124,128,130,138,],[53,53,53,53,53,-53,53,53,-30,53,53,53,53,53,53,53,-52,53,53,53,53,53,53,53,53,53,53,53,53,-29,-31,53,-33,53,53,-32,]),'DECIMAL':([21,28,31,32,41,43,47,49,62,63,66,68,71,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,91,121,122,123,124,128,130,138,],[54,54,54,54,54,-53,54,54,-30,54,54,54,54,54,54,54,-52,54,54,54,54,54,54,54,54,54,54,54,54,-29,-31,54,-33,54,54,-32,]),'CARACTER':([21,28,31,32,41,43,47,49,62,63,66,68,71,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,91,121,122,123,124,128,130,138,],[55,55,55,55,55,-53,55,55,-30,55,55,55,55,55,55,55,-52,55,55,55,55,55,55,55,55,55,55,55,55,-29,-31,55,-33,55,55,-32,]),'TRUE':([21,28,31,32,41,43,47,49,62,63,66,68,71,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,91,121,122,123,124,128,130,138,],[56,56,56,56,56,-53,56,56,-30,56,56,56,56,56,56,56,-52,56,56,56,56,56,56,56,56,56,56,56,56,-29,-31,56,-33,56,56,-32,]),'FALSE':([21,28,31,32,41,43,47,49,62,63,66,68,71,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,91,121,122,123,124,128,130,138,],[57,57,57,57,57,-53,57,57,-30,57,57,57,57,57,57,57,-52,57,57,57,57,57,57,57,57,57,57,57,57,-29,-31,57,-33,57,57,-32,]),'NULL':([21,28,31,32,41,43,47,49,62,63,66,68,71,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,91,121,122,123,124,128,130,138,],[58,58,58,58,58,-53,58,58,-30,58,58,58,58,58,58,58,-52,58,58,58,58,58,58,58,58,58,58,58,58,-29,-31,58,-33,58,58,-32,]),'LOG':([26,],[60,]),'DOSPUNTOS':([27,39,40,42,44,45,46,48,50,51,52,53,54,55,56,57,58,59,76,89,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,],[61,-47,-49,-51,-61,-56,-64,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-50,-71,128,-46,-48,-54,-55,-62,-63,-57,-58,-59,-60,-65,-66,-67,-69,]),'INTERROGACION':([38,39,40,42,44,45,46,48,50,51,52,53,54,55,56,57,58,59,76,89,105,106,107,108,109,110,111,112,113,114,115,116,117,118,],[73,-47,-49,-51,-61,-56,-64,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-50,-71,-46,-48,-54,-55,-62,-63,-57,-58,-59,-60,-65,-66,-67,-69,]),'PARDER':([38,39,40,42,44,45,46,48,50,51,52,53,54,55,56,57,58,59,64,65,67,69,70,76,89,90,99,100,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,134,135,137,],[-45,-47,-49,-51,-61,-56,-64,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-24,-27,-28,101,102,-50,-71,118,-25,-26,-46,-48,-54,-55,-62,-63,-57,-58,-59,-60,-65,-66,-67,-69,129,-43,142,-44,-42,]),'COMA':([38,39,40,42,44,45,46,48,50,51,52,53,54,55,56,57,58,59,76,89,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,135,137,],[-45,-47,-49,-51,-61,-56,-64,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-50,-71,-46,-48,-54,-55,-62,-63,-57,-58,-59,-60,-65,-66,-67,-69,130,-43,-44,-42,]),'OR':([38,39,40,42,44,45,46,48,50,51,52,53,54,55,56,57,58,59,76,89,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,135,],[74,-47,-49,-51,-61,-56,-64,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-50,-71,74,74,-46,-48,-54,-55,-62,-63,-57,-58,-59,-60,-65,-66,-67,-69,74,]),'AND':([39,40,42,44,45,46,48,50,51,52,53,54,55,56,57,58,59,76,89,105,106,107,108,109,110,111,112,113,114,115,116,117,118,],[75,-49,-51,-61,-56,-64,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-50,-71,75,-48,-54,-55,-62,-63,-57,-58,-59,-60,-65,-66,-67,-69,]),'EQUIVALENTE':([44,46,48,50,51,52,53,54,55,56,57,58,59,89,109,110,115,116,117,118,],[78,-64,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-71,-62,-63,-65,-66,-67,-69,]),'DISTINTO':([44,46,48,50,51,52,53,54,55,56,57,58,59,89,109,110,115,116,117,118,],[79,-64,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-71,-62,-63,-65,-66,-67,-69,]),'MAYOR':([44,46,48,50,51,52,53,54,55,56,57,58,59,89,109,110,115,116,117,118,],[82,-64,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-71,-62,-63,-65,-66,-67,-69,]),'MENOR':([44,46,48,50,51,52,53,54,55,56,57,58,59,89,109,110,115,116,117,118,],[83,-64,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-71,-62,-63,-65,-66,-67,-69,]),'MAYORIGUAL':([44,46,48,50,51,52,53,54,55,56,57,58,59,89,109,110,115,116,117,118,],[84,-64,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-71,-62,-63,-65,-66,-67,-69,]),'MENORIGUAL':([44,46,48,50,51,52,53,54,55,56,57,58,59,89,109,110,115,116,117,118,],[85,-64,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-71,-62,-63,-65,-66,-67,-69,]),'POR':([46,48,50,51,52,53,54,55,56,57,58,59,89,109,110,115,116,117,118,],[86,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-71,86,86,-65,-66,-67,-69,]),'DIVIDIDO':([46,48,50,51,52,53,54,55,56,57,58,59,89,109,110,115,116,117,118,],[87,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-71,87,87,-65,-66,-67,-69,]),'MODULO':([46,48,50,51,52,53,54,55,56,57,58,59,89,109,110,115,116,117,118,],[88,-68,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-71,88,88,-65,-66,-67,-69,]),'NUMBER':([61,],[93,]),'FLOAT':([61,],[94,]),'STRING':([61,],[95,]),'BOOLEAN':([61,],[96,]),'CHAR':([61,],[97,]),'LLAVIZQ':([101,102,142,143,],[125,126,144,146,]),'ELSE':([140,],[143,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,125,126,144,146,],[2,132,133,148,149,]),'instruccion':([0,2,125,126,132,133,144,146,148,149,],[3,24,3,3,24,24,3,3,24,24,]),'imprimir_instr':([0,2,125,126,132,133,144,146,148,149,],[4,4,4,4,4,4,4,4,4,4,]),'declaracion':([0,2,33,125,126,132,133,144,146,148,149,],[5,5,71,5,5,5,5,5,5,5,5,]),'asignacion':([0,2,125,126,127,132,133,144,146,148,149,],[6,6,6,6,134,6,6,6,6,6,6,]),'sIf':([0,2,125,126,132,133,143,144,146,148,149,],[7,7,7,7,7,7,147,7,7,7,7,]),'sWhile':([0,2,125,126,132,133,144,146,148,149,],[8,8,8,8,8,8,8,8,8,8,]),'sFor':([0,2,125,126,132,133,144,146,148,149,],[9,9,9,9,9,9,9,9,9,9,]),'sContinue':([0,2,125,126,132,133,144,146,148,149,],[10,10,10,10,10,10,10,10,10,10,]),'sBreak':([0,2,125,126,132,133,144,146,148,149,],[11,11,11,11,11,11,11,11,11,11,]),'sReturn':([0,2,125,126,132,133,144,146,148,149,],[12,12,12,12,12,12,12,12,12,12,]),'tipoVar':([0,2,33,125,126,132,133,144,146,148,149,],[14,14,14,14,14,14,14,14,14,14,14,]),'op_Ternario':([21,28,31,32,63,66,68,71,91,123,130,],[37,64,69,70,98,99,100,103,120,131,137,]),'exp_Or':([21,28,31,32,49,63,66,68,71,73,91,123,128,130,],[38,38,38,38,90,38,38,38,38,104,38,38,135,38,]),'exp_And':([21,28,31,32,49,63,66,68,71,73,74,91,123,128,130,],[39,39,39,39,39,39,39,39,39,39,105,39,39,39,39,]),'exp_Not':([21,28,31,32,49,63,66,68,71,73,74,75,91,123,128,130,],[40,40,40,40,40,40,40,40,40,40,40,106,40,40,40,40,]),'lNot':([21,28,31,32,49,63,66,68,71,73,74,75,91,123,128,130,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'exp_Comp':([21,28,31,32,41,49,63,66,68,71,73,74,75,91,123,128,130,],[42,42,42,42,76,42,42,42,42,42,42,42,42,42,42,42,42,]),'exp_Sum_Menos':([21,28,31,32,41,49,63,66,68,71,73,74,75,78,79,82,83,84,85,91,123,128,130,],[44,44,44,44,44,44,44,44,44,44,44,44,44,107,108,111,112,113,114,44,44,44,44,]),'exp_rel':([21,28,31,32,41,49,63,66,68,71,73,74,75,91,123,128,130,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'exp_Mul_Div':([21,28,31,32,41,49,63,66,68,71,73,74,75,78,79,80,81,82,83,84,85,91,123,128,130,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,109,110,46,46,46,46,46,46,46,46,]),'exp_Parentesis':([21,28,31,32,41,49,63,66,68,71,73,74,75,78,79,80,81,82,83,84,85,86,87,88,91,123,128,130,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,115,116,117,48,48,48,48,]),'exp_Negativo':([21,28,31,32,41,49,63,66,68,71,73,74,75,78,79,80,81,82,83,84,85,86,87,88,91,123,128,130,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'valor':([21,28,31,32,41,47,49,63,66,68,71,73,74,75,78,79,80,81,82,83,84,85,86,87,88,91,123,128,130,],[51,51,51,51,51,89,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'declaracion_implicita':([27,],[62,]),'tipo':([61,],[92,]),'lista_exp':([91,],[119,]),'declaracion_explicita':([92,],[121,]),'sIf2':([132,],[139,]),'sElse':([143,],[145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',165),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica.py',169),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',174),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','gramatica.py',178),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','gramatica.py',179),
  ('instruccion -> asignacion PUNTOCOMA','instruccion',2,'p_instruccion','gramatica.py',180),
  ('instruccion -> sIf','instruccion',1,'p_instruccion','gramatica.py',181),
  ('instruccion -> sWhile','instruccion',1,'p_instruccion','gramatica.py',182),
  ('instruccion -> sFor','instruccion',1,'p_instruccion','gramatica.py',183),
  ('instruccion -> sContinue','instruccion',1,'p_instruccion','gramatica.py',184),
  ('instruccion -> sBreak','instruccion',1,'p_instruccion','gramatica.py',185),
  ('instruccion -> sReturn','instruccion',1,'p_instruccion','gramatica.py',186),
  ('sContinue -> CONTINUE PUNTOCOMA','sContinue',2,'p_sContinue','gramatica.py',190),
  ('sBreak -> BREAK PUNTOCOMA','sBreak',2,'p_sBreak','gramatica.py',193),
  ('sReturn -> RETURN PUNTOCOMA','sReturn',2,'p_sReturn1','gramatica.py',196),
  ('sReturn -> RETURN op_Ternario PUNTOCOMA','sReturn',3,'p_sReturn2','gramatica.py',199),
  ('sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER','sFor',10,'p_sFor','gramatica.py',202),
  ('sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER','sWhile',7,'p_sWhile','gramatica.py',206),
  ('sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2','sIf',7,'p_sIf1','gramatica.py',210),
  ('sIf2 -> LLAVDER ELSE sElse','sIf2',3,'p_sIf2_1','gramatica.py',214),
  ('sIf2 -> LLAVDER','sIf2',1,'p_sIf2_2','gramatica.py',218),
  ('sElse -> LLAVIZQ instrucciones LLAVDER','sElse',3,'p_sElse1','gramatica.py',222),
  ('sElse -> sIf','sElse',1,'p_sElse2','gramatica.py',226),
  ('asignacion -> ID IGUAL op_Ternario','asignacion',3,'p_asignacion1','gramatica.py',230),
  ('asignacion -> ID MAS IGUAL op_Ternario','asignacion',4,'p_asignacion1','gramatica.py',231),
  ('asignacion -> ID MENOS IGUAL op_Ternario','asignacion',4,'p_asignacion1','gramatica.py',232),
  ('asignacion -> ID MAS MAS','asignacion',3,'p_asignacion2','gramatica.py',242),
  ('asignacion -> ID MENOS MENOS','asignacion',3,'p_asignacion2','gramatica.py',243),
  ('declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita','declaracion',5,'p_declaracion1','gramatica.py',251),
  ('declaracion -> tipoVar ID declaracion_implicita','declaracion',3,'p_declaracion2','gramatica.py',260),
  ('declaracion_explicita -> PUNTOCOMA','declaracion_explicita',1,'p_declaracion_explicita1','gramatica.py',267),
  ('declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA','declaracion_explicita',3,'p_declaracion_explicita2','gramatica.py',271),
  ('declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA','declaracion_implicita',3,'p_declaracion_implicita','gramatica.py',276),
  ('tipoVar -> VAR','tipoVar',1,'p_tipoVar','gramatica.py',280),
  ('tipoVar -> CONST','tipoVar',1,'p_tipoVar','gramatica.py',281),
  ('tipo -> NUMBER','tipo',1,'p_tipoNumber','gramatica.py',286),
  ('tipo -> FLOAT','tipo',1,'p_tipoFloat','gramatica.py',290),
  ('tipo -> STRING','tipo',1,'p_tipoString','gramatica.py',294),
  ('tipo -> BOOLEAN','tipo',1,'p_tipoBoolean','gramatica.py',298),
  ('tipo -> CHAR','tipo',1,'p_tipoChar','gramatica.py',302),
  ('imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA','imprimir_instr',7,'p_instruccion_console','gramatica.py',306),
  ('lista_exp -> lista_exp COMA op_Ternario','lista_exp',3,'p_lista_exp1','gramatica.py',310),
  ('lista_exp -> op_Ternario','lista_exp',1,'p_lista_exp2','gramatica.py',315),
  ('op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or','op_Ternario',5,'p_op_Ternario1','gramatica.py',319),
  ('op_Ternario -> exp_Or','op_Ternario',1,'p_op_Ternario2','gramatica.py',323),
  ('exp_Or -> exp_Or OR exp_And','exp_Or',3,'p_exp_Or1','gramatica.py',327),
  ('exp_Or -> exp_And','exp_Or',1,'p_exp_Or2','gramatica.py',332),
  ('exp_And -> exp_And AND exp_Not','exp_And',3,'p_exp_And1','gramatica.py',336),
  ('exp_And -> exp_Not','exp_And',1,'p_exp_And2','gramatica.py',340),
  ('exp_Not -> lNot exp_Comp','exp_Not',2,'p_exp_Not1','gramatica.py',346),
  ('exp_Not -> exp_Comp','exp_Not',1,'p_expNot2','gramatica.py',353),
  ('lNot -> lNot NOT','lNot',2,'p_listaNot1','gramatica.py',357),
  ('lNot -> NOT','lNot',1,'p_listaNot2','gramatica.py',361),
  ('exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos','exp_Comp',3,'p_exp_Comp1','gramatica.py',365),
  ('exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos','exp_Comp',3,'p_exp_Comp1','gramatica.py',366),
  ('exp_Comp -> exp_rel','exp_Comp',1,'p_exp_Comp2','gramatica.py',371),
  ('exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos','exp_rel',3,'p_exp_rel1','gramatica.py',375),
  ('exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos','exp_rel',3,'p_exp_rel1','gramatica.py',376),
  ('exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos','exp_rel',3,'p_exp_rel1','gramatica.py',377),
  ('exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos','exp_rel',3,'p_exp_rel1','gramatica.py',378),
  ('exp_rel -> exp_Sum_Menos','exp_rel',1,'p_exp_rel2','gramatica.py',385),
  ('exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div','exp_Sum_Menos',3,'p_exp_sum_menos1','gramatica.py',389),
  ('exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div','exp_Sum_Menos',3,'p_exp_sum_menos1','gramatica.py',390),
  ('exp_Sum_Menos -> exp_Mul_Div','exp_Sum_Menos',1,'p_exp_Sum_Menos2','gramatica.py',396),
  ('exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis','exp_Mul_Div',3,'p_exp_Mul_Div1','gramatica.py',401),
  ('exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis','exp_Mul_Div',3,'p_exp_Mul_Div1','gramatica.py',402),
  ('exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis','exp_Mul_Div',3,'p_exp_Mul_Div1','gramatica.py',403),
  ('exp_Mul_Div -> exp_Parentesis','exp_Mul_Div',1,'p_exp_Mul_Div2','gramatica.py',409),
  ('exp_Parentesis -> PARIZQ exp_Or PARDER','exp_Parentesis',3,'p_exp_Parentesis1','gramatica.py',413),
  ('exp_Parentesis -> exp_Negativo','exp_Parentesis',1,'p_exp_Parentesis2','gramatica.py',417),
  ('exp_Negativo -> MENOS valor','exp_Negativo',2,'p_exp_Negativo1','gramatica.py',421),
  ('exp_Negativo -> valor','exp_Negativo',1,'p_exp_Negativo2','gramatica.py',425),
  ('valor -> ENTERO','valor',1,'p_valorEntero','gramatica.py',430),
  ('valor -> CADENA','valor',1,'p_valorCadena','gramatica.py',434),
  ('valor -> DECIMAL','valor',1,'p_valorDecimal','gramatica.py',438),
  ('valor -> CARACTER','valor',1,'p_valorCaracter','gramatica.py',442),
  ('valor -> TRUE','valor',1,'p_valorBoolean','gramatica.py',446),
  ('valor -> FALSE','valor',1,'p_valorBoolean','gramatica.py',447),
  ('valor -> NULL','valor',1,'p_valorNull','gramatica.py',451),
  ('valor -> ID','valor',1,'p_valorId','gramatica.py',455),
]
