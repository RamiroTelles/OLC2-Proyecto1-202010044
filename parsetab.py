
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN CADENA CARACTER CHAR COMA COMMENTBLOCK CONSOLE DECIMAL DISTINTO DIVIDIDO DOSPUNTOS ELSE ENTERO EQUIVALENTE FALSE FLOAT FUNCTION ID IF IGUAL INTERFACE INTERROGACION LET LOG MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MODULO NOT NUMBER OR PARDER PARIZQ POR PUNTO PUNTOCOMA STRING TRUE VARinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion      : imprimir_instr\n                        | declaraciondeclaracion  : VAR ID tipos_declaracionestipos_declaraciones  : DOSPUNTOS declaracion_explicita\n                            | declaracion_implicitadeclaracion_explicita    : tipo PUNTOCOMAdeclaracion_explicita    : tipo IGUAL op_Ternario PUNTOCOMAdeclaracion_implicita    : IGUAL op_Ternario PUNTOCOMAtipo : NUMBERtipo : FLOATtipo : STRINGtipo : BOOLEANtipo : CHARimprimir_instr : CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMAlista_exp    : lista_exp COMA op_Ternariolista_exp    : op_Ternarioop_Ternario  : exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Orop_Ternario  : exp_Orexp_Or   : exp_Or OR exp_Andexp_Or   : exp_Andexp_And   : exp_And AND exp_Notexp_And   : exp_Notexp_Not  : lNot exp_Compexp_Not  : exp_ComplNot : lNot NOTlNot : NOTexp_Comp : exp_Sum_Menos EQUIVALENTE exp_Sum_Menos\n                | exp_Sum_Menos DISTINTO exp_Sum_Menosexp_Comp    : exp_relexp_rel  : exp_Sum_Menos MAYOR exp_Sum_Menos\n                | exp_Sum_Menos MENOR exp_Sum_Menos\n                | exp_Sum_Menos MAYORIGUAL exp_Sum_Menos\n                | exp_Sum_Menos MENORIGUAL exp_Sum_Menosexp_rel    : exp_Sum_Menosexp_Sum_Menos    : exp_Sum_Menos MAS exp_Mul_Div\n                        | exp_Sum_Menos MENOS exp_Mul_Divexp_Sum_Menos    : exp_Mul_Divexp_Mul_Div  : exp_Mul_Div POR exp_Parentesis\n                    | exp_Mul_Div DIVIDIDO exp_Parentesis\n                    | exp_Mul_Div MODULO exp_Parentesisexp_Mul_Div    : exp_Parentesisexp_Parentesis   : PARIZQ exp_Or PARDERexp_Parentesis   : exp_Negativoexp_Negativo : MENOS valorexp_Negativo : valorvalor    : ENTEROvalor    : CADENAvalor    : DECIMALvalor    : CARACTERvalor    : TRUE\n                | FALSE'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,8,12,14,17,47,49,86,88,],[6,6,-3,-4,-5,-2,-6,-8,-7,-9,-11,-17,-10,]),'VAR':([0,2,3,4,5,8,12,14,17,47,49,86,88,],[7,7,-3,-4,-5,-2,-6,-8,-7,-9,-11,-17,-10,]),'$end':([1,2,3,4,5,8,12,14,17,47,49,86,88,],[0,-1,-3,-4,-5,-2,-6,-8,-7,-9,-11,-17,-10,]),'PUNTO':([6,],[9,]),'ID':([7,],[10,]),'LOG':([9,],[11,]),'DOSPUNTOS':([10,26,27,29,31,32,33,35,37,38,39,40,41,42,43,44,53,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,],[13,-23,-25,-27,-37,-32,-40,-44,-46,-48,-49,-50,-51,-52,-53,-54,-26,-47,89,-22,-24,-30,-31,-38,-39,-33,-34,-35,-36,-41,-42,-43,-45,]),'IGUAL':([10,18,19,20,21,22,23,],[15,48,-12,-13,-14,-15,-16,]),'PARIZQ':([11,15,16,28,30,36,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,69,89,],[16,36,36,36,-29,36,36,36,36,36,-28,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'NUMBER':([13,],[19,]),'FLOAT':([13,],[20,]),'STRING':([13,],[21,]),'BOOLEAN':([13,],[22,]),'CHAR':([13,],[23,]),'NOT':([15,16,28,30,36,48,50,51,52,54,69,89,],[30,30,54,-29,30,30,30,30,30,-28,30,30,]),'MENOS':([15,16,28,30,31,33,35,36,37,38,39,40,41,42,43,44,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,69,74,75,76,77,78,79,80,81,82,83,84,85,89,],[34,34,34,-29,58,-40,-44,34,-46,-48,-49,-50,-51,-52,-53,-54,34,34,34,34,-28,34,34,34,34,34,34,34,34,34,34,34,-47,34,58,58,-38,-39,58,58,58,58,-41,-42,-43,-45,34,]),'ENTERO':([15,16,28,30,34,36,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,69,89,],[39,39,39,-29,39,39,39,39,39,39,-28,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'CADENA':([15,16,28,30,34,36,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,69,89,],[40,40,40,-29,40,40,40,40,40,40,-28,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'DECIMAL':([15,16,28,30,34,36,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,69,89,],[41,41,41,-29,41,41,41,41,41,41,-28,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'CARACTER':([15,16,28,30,34,36,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,69,89,],[42,42,42,-29,42,42,42,42,42,42,-28,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'TRUE':([15,16,28,30,34,36,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,69,89,],[43,43,43,-29,43,43,43,43,43,43,-28,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'FALSE':([15,16,28,30,34,36,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,69,89,],[44,44,44,-29,44,44,44,44,44,44,-28,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'PUNTOCOMA':([18,19,20,21,22,23,24,25,26,27,29,31,32,33,35,37,38,39,40,41,42,43,44,53,66,68,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,],[47,-12,-13,-14,-15,-16,49,-21,-23,-25,-27,-37,-32,-40,-44,-46,-48,-49,-50,-51,-52,-53,-54,-26,-47,86,88,-22,-24,-30,-31,-38,-39,-33,-34,-35,-36,-41,-42,-43,-45,-20,]),'INTERROGACION':([25,26,27,29,31,32,33,35,37,38,39,40,41,42,43,44,53,66,72,73,74,75,76,77,78,79,80,81,82,83,84,85,],[50,-23,-25,-27,-37,-32,-40,-44,-46,-48,-49,-50,-51,-52,-53,-54,-26,-47,-22,-24,-30,-31,-38,-39,-33,-34,-35,-36,-41,-42,-43,-45,]),'PARDER':([25,26,27,29,31,32,33,35,37,38,39,40,41,42,43,44,45,46,53,66,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,90,],[-21,-23,-25,-27,-37,-32,-40,-44,-46,-48,-49,-50,-51,-52,-53,-54,68,-19,-26,-47,85,-22,-24,-30,-31,-38,-39,-33,-34,-35,-36,-41,-42,-43,-45,-18,-20,]),'COMA':([25,26,27,29,31,32,33,35,37,38,39,40,41,42,43,44,45,46,53,66,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,90,],[-21,-23,-25,-27,-37,-32,-40,-44,-46,-48,-49,-50,-51,-52,-53,-54,69,-19,-26,-47,-22,-24,-30,-31,-38,-39,-33,-34,-35,-36,-41,-42,-43,-45,-18,-20,]),'OR':([25,26,27,29,31,32,33,35,37,38,39,40,41,42,43,44,53,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,],[51,-23,-25,-27,-37,-32,-40,-44,-46,-48,-49,-50,-51,-52,-53,-54,-26,-47,51,51,-22,-24,-30,-31,-38,-39,-33,-34,-35,-36,-41,-42,-43,-45,51,]),'AND':([26,27,29,31,32,33,35,37,38,39,40,41,42,43,44,53,66,72,73,74,75,76,77,78,79,80,81,82,83,84,85,],[52,-25,-27,-37,-32,-40,-44,-46,-48,-49,-50,-51,-52,-53,-54,-26,-47,52,-24,-30,-31,-38,-39,-33,-34,-35,-36,-41,-42,-43,-45,]),'EQUIVALENTE':([31,33,35,37,38,39,40,41,42,43,44,66,76,77,82,83,84,85,],[55,-40,-44,-46,-48,-49,-50,-51,-52,-53,-54,-47,-38,-39,-41,-42,-43,-45,]),'DISTINTO':([31,33,35,37,38,39,40,41,42,43,44,66,76,77,82,83,84,85,],[56,-40,-44,-46,-48,-49,-50,-51,-52,-53,-54,-47,-38,-39,-41,-42,-43,-45,]),'MAS':([31,33,35,37,38,39,40,41,42,43,44,66,74,75,76,77,78,79,80,81,82,83,84,85,],[57,-40,-44,-46,-48,-49,-50,-51,-52,-53,-54,-47,57,57,-38,-39,57,57,57,57,-41,-42,-43,-45,]),'MAYOR':([31,33,35,37,38,39,40,41,42,43,44,66,76,77,82,83,84,85,],[59,-40,-44,-46,-48,-49,-50,-51,-52,-53,-54,-47,-38,-39,-41,-42,-43,-45,]),'MENOR':([31,33,35,37,38,39,40,41,42,43,44,66,76,77,82,83,84,85,],[60,-40,-44,-46,-48,-49,-50,-51,-52,-53,-54,-47,-38,-39,-41,-42,-43,-45,]),'MAYORIGUAL':([31,33,35,37,38,39,40,41,42,43,44,66,76,77,82,83,84,85,],[61,-40,-44,-46,-48,-49,-50,-51,-52,-53,-54,-47,-38,-39,-41,-42,-43,-45,]),'MENORIGUAL':([31,33,35,37,38,39,40,41,42,43,44,66,76,77,82,83,84,85,],[62,-40,-44,-46,-48,-49,-50,-51,-52,-53,-54,-47,-38,-39,-41,-42,-43,-45,]),'POR':([33,35,37,38,39,40,41,42,43,44,66,76,77,82,83,84,85,],[63,-44,-46,-48,-49,-50,-51,-52,-53,-54,-47,63,63,-41,-42,-43,-45,]),'DIVIDIDO':([33,35,37,38,39,40,41,42,43,44,66,76,77,82,83,84,85,],[64,-44,-46,-48,-49,-50,-51,-52,-53,-54,-47,64,64,-41,-42,-43,-45,]),'MODULO':([33,35,37,38,39,40,41,42,43,44,66,76,77,82,83,84,85,],[65,-44,-46,-48,-49,-50,-51,-52,-53,-54,-47,65,65,-41,-42,-43,-45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,8,]),'imprimir_instr':([0,2,],[4,4,]),'declaracion':([0,2,],[5,5,]),'tipos_declaraciones':([10,],[12,]),'declaracion_implicita':([10,],[14,]),'declaracion_explicita':([13,],[17,]),'tipo':([13,],[18,]),'op_Ternario':([15,16,48,69,],[24,46,70,87,]),'exp_Or':([15,16,36,48,50,69,89,],[25,25,67,25,71,25,90,]),'exp_And':([15,16,36,48,50,51,69,89,],[26,26,26,26,26,72,26,26,]),'exp_Not':([15,16,36,48,50,51,52,69,89,],[27,27,27,27,27,27,73,27,27,]),'lNot':([15,16,36,48,50,51,52,69,89,],[28,28,28,28,28,28,28,28,28,]),'exp_Comp':([15,16,28,36,48,50,51,52,69,89,],[29,29,53,29,29,29,29,29,29,29,]),'exp_Sum_Menos':([15,16,28,36,48,50,51,52,55,56,59,60,61,62,69,89,],[31,31,31,31,31,31,31,31,74,75,78,79,80,81,31,31,]),'exp_rel':([15,16,28,36,48,50,51,52,69,89,],[32,32,32,32,32,32,32,32,32,32,]),'exp_Mul_Div':([15,16,28,36,48,50,51,52,55,56,57,58,59,60,61,62,69,89,],[33,33,33,33,33,33,33,33,33,33,76,77,33,33,33,33,33,33,]),'exp_Parentesis':([15,16,28,36,48,50,51,52,55,56,57,58,59,60,61,62,63,64,65,69,89,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,82,83,84,35,35,]),'exp_Negativo':([15,16,28,36,48,50,51,52,55,56,57,58,59,60,61,62,63,64,65,69,89,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'valor':([15,16,28,34,36,48,50,51,52,55,56,57,58,59,60,61,62,63,64,65,69,89,],[38,38,38,66,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'lista_exp':([16,],[45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',153),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica.py',157),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',162),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','gramatica.py',166),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','gramatica.py',167),
  ('declaracion -> VAR ID tipos_declaraciones','declaracion',3,'p_declaracion','gramatica.py',171),
  ('tipos_declaraciones -> DOSPUNTOS declaracion_explicita','tipos_declaraciones',2,'p_tipos_declaraciones','gramatica.py',174),
  ('tipos_declaraciones -> declaracion_implicita','tipos_declaraciones',1,'p_tipos_declaraciones','gramatica.py',175),
  ('declaracion_explicita -> tipo PUNTOCOMA','declaracion_explicita',2,'p_declaracion_explicita1','gramatica.py',178),
  ('declaracion_explicita -> tipo IGUAL op_Ternario PUNTOCOMA','declaracion_explicita',4,'p_declaracion_explicita2','gramatica.py',181),
  ('declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA','declaracion_implicita',3,'p_declaracion_implicita','gramatica.py',184),
  ('tipo -> NUMBER','tipo',1,'p_tipoNumber','gramatica.py',188),
  ('tipo -> FLOAT','tipo',1,'p_tipoFloat','gramatica.py',192),
  ('tipo -> STRING','tipo',1,'p_tipoString','gramatica.py',196),
  ('tipo -> BOOLEAN','tipo',1,'p_tipoBoolean','gramatica.py',200),
  ('tipo -> CHAR','tipo',1,'p_tipoChar','gramatica.py',204),
  ('imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA','imprimir_instr',7,'p_instruccion_console','gramatica.py',208),
  ('lista_exp -> lista_exp COMA op_Ternario','lista_exp',3,'p_lista_exp1','gramatica.py',212),
  ('lista_exp -> op_Ternario','lista_exp',1,'p_lista_exp2','gramatica.py',217),
  ('op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or','op_Ternario',5,'p_op_Ternario1','gramatica.py',221),
  ('op_Ternario -> exp_Or','op_Ternario',1,'p_op_Ternario2','gramatica.py',225),
  ('exp_Or -> exp_Or OR exp_And','exp_Or',3,'p_exp_Or1','gramatica.py',229),
  ('exp_Or -> exp_And','exp_Or',1,'p_exp_Or2','gramatica.py',234),
  ('exp_And -> exp_And AND exp_Not','exp_And',3,'p_exp_And1','gramatica.py',238),
  ('exp_And -> exp_Not','exp_And',1,'p_exp_And2','gramatica.py',242),
  ('exp_Not -> lNot exp_Comp','exp_Not',2,'p_exp_Not1','gramatica.py',248),
  ('exp_Not -> exp_Comp','exp_Not',1,'p_expNot2','gramatica.py',255),
  ('lNot -> lNot NOT','lNot',2,'p_listaNot1','gramatica.py',259),
  ('lNot -> NOT','lNot',1,'p_listaNot2','gramatica.py',263),
  ('exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos','exp_Comp',3,'p_exp_Comp1','gramatica.py',267),
  ('exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos','exp_Comp',3,'p_exp_Comp1','gramatica.py',268),
  ('exp_Comp -> exp_rel','exp_Comp',1,'p_exp_Comp2','gramatica.py',273),
  ('exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos','exp_rel',3,'p_exp_rel1','gramatica.py',277),
  ('exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos','exp_rel',3,'p_exp_rel1','gramatica.py',278),
  ('exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos','exp_rel',3,'p_exp_rel1','gramatica.py',279),
  ('exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos','exp_rel',3,'p_exp_rel1','gramatica.py',280),
  ('exp_rel -> exp_Sum_Menos','exp_rel',1,'p_exp_rel2','gramatica.py',287),
  ('exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div','exp_Sum_Menos',3,'p_exp_sum_menos1','gramatica.py',291),
  ('exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div','exp_Sum_Menos',3,'p_exp_sum_menos1','gramatica.py',292),
  ('exp_Sum_Menos -> exp_Mul_Div','exp_Sum_Menos',1,'p_exp_Sum_Menos2','gramatica.py',298),
  ('exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis','exp_Mul_Div',3,'p_exp_Mul_Div1','gramatica.py',303),
  ('exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis','exp_Mul_Div',3,'p_exp_Mul_Div1','gramatica.py',304),
  ('exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis','exp_Mul_Div',3,'p_exp_Mul_Div1','gramatica.py',305),
  ('exp_Mul_Div -> exp_Parentesis','exp_Mul_Div',1,'p_exp_Mul_Div2','gramatica.py',311),
  ('exp_Parentesis -> PARIZQ exp_Or PARDER','exp_Parentesis',3,'p_exp_Parentesis1','gramatica.py',315),
  ('exp_Parentesis -> exp_Negativo','exp_Parentesis',1,'p_exp_Parentesis2','gramatica.py',319),
  ('exp_Negativo -> MENOS valor','exp_Negativo',2,'p_exp_Negativo1','gramatica.py',323),
  ('exp_Negativo -> valor','exp_Negativo',1,'p_exp_Negativo2','gramatica.py',327),
  ('valor -> ENTERO','valor',1,'p_valorEntero','gramatica.py',332),
  ('valor -> CADENA','valor',1,'p_valorCadena','gramatica.py',336),
  ('valor -> DECIMAL','valor',1,'p_valorDecimal','gramatica.py',340),
  ('valor -> CARACTER','valor',1,'p_valorCaracter','gramatica.py',344),
  ('valor -> TRUE','valor',1,'p_valorBoolean','gramatica.py',348),
  ('valor -> FALSE','valor',1,'p_valorBoolean','gramatica.py',349),
]
